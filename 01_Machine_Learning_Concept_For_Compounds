{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":9918889,"sourceType":"datasetVersion","datasetId":5958257}],"dockerImageVersionId":30786,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# **Instalasi Packages**","metadata":{}},{"cell_type":"code","source":"# Instalasi machine Learning Package\nimport sys\nimport time\nimport contextlib\nwith open('install_ML.log', 'a') as inpt:\n    with contextlib.redirect_stdout(inpt):\n\n        # -- Start installation --\n        start = time.time()\n        !pip install cairosvg\n        !pip install padelpy\n        !pip install gdown\n        !pip install luwiji\n        !pip install jcopml\n        !pip install chembl_webresource_client\n        \n        from luwiji.knn import illustration, demo\n        \n        import matplotlib.pyplot as plt\n        import seaborn as sns\n        import os\n        import copy\n        from padelpy import padeldescriptor\n        import pandas as pd\n        import numpy as np\n        \n        from sklearn.metrics import r2_score, mean_absolute_error, mean_squared_error\n        from chembl_webresource_client.new_client import new_client\n        end = time.time()\n        # -- End installation --\nprint(f'+ Time elapsed: ' + time.strftime('%Mm %Ss', time.gmtime(end - start)))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T06:42:30.945794Z","iopub.execute_input":"2024-11-19T06:42:30.946644Z","iopub.status.idle":"2024-11-19T06:43:49.484053Z","shell.execute_reply.started":"2024-11-19T06:42:30.946594Z","shell.execute_reply":"2024-11-19T06:43:49.483008Z"}},"outputs":[{"name":"stdout","text":"+ Time elapsed: 01m 18s\n","output_type":"stream"}],"execution_count":1},{"cell_type":"markdown","source":"# **Data Prep**","metadata":{}},{"cell_type":"markdown","source":"## Data Enginering","metadata":{}},{"cell_type":"markdown","source":"**dataset 1 (lipinsky)**","metadata":{}},{"cell_type":"code","source":"df_lipinsky = pd.read_csv('/kaggle/input/docking-md/Marine_Drug_Discovery/SHP2_Enzymes/MACHINE_LEARNING/SHP2_Enzymes_04_PBMC_bioactivity_data_final.csv')\ndf_lipinsky","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T06:47:31.561901Z","iopub.execute_input":"2024-11-19T06:47:31.562644Z","iopub.status.idle":"2024-11-19T06:47:31.626343Z","shell.execute_reply.started":"2024-11-19T06:47:31.562604Z","shell.execute_reply":"2024-11-19T06:47:31.625282Z"}},"outputs":[{"execution_count":3,"output_type":"execute_result","data":{"text/plain":"     molecule_chembl_id                                   canonical_smiles  \\\n0           CHEMBL88475      CCOc1cc(C(CC(=O)OC)N2C(=O)c3ccccc3C2=O)ccc1OC   \n1           CHEMBL89890        COc1ccc(C(CC(N)=O)N2C(=O)c3ccccc3C2=O)cc1OC   \n2          CHEMBL419135       CCOc1cc(C(CC(N)=O)N2C(=O)c3ccccc3C2=O)ccc1OC   \n3             CHEMBL468                O=C1CCC(N2C(=O)c3ccccc3C2=O)C(=O)N1   \n4           CHEMBL88935     COC(=O)CC(c1ccc(OC)c(OC)c1)N1C(=O)c2ccccc2C1=O   \n...                 ...                                                ...   \n2760      CHEMBL4638643  COC[C@@](O)([C@@H](Nc1cc(F)cc2[nH]c(=O)ccc12)c...   \n2761      CHEMBL4639128  COCc1nc2cnc3cc(-c4c(C)noc4C)c(OC[C@H]4CCNC4)cc...   \n2762      CHEMBL4638144  COc1ccc2c(c1)C(c1ccc(Cl)cc1)=N[C@@H](NC(=O)OCc...   \n2763      CHEMBL4641965  CCCC#Cc1cc([C@@H]2O[C@H](CO)[C@@H](O)[C@H]2O)n...   \n2764      CHEMBL4640462  Nc1ncnn2c([C@@H]3O[C@H](CO)[C@@H](O)[C@H]3O)cc...   \n\n      standard_value         class       MW     LogP  NumHDonors  \\\n0             700.00        active  383.400  2.99430         0.0   \n1           13000.00      inactive  354.362  1.91650         1.0   \n2            2700.00  intermediate  368.389  2.30660         1.0   \n3          200000.00      inactive  258.233  0.08780         1.0   \n4            2900.00  intermediate  369.373  2.60420         0.0   \n...              ...           ...      ...      ...         ...   \n2760            0.92        active  492.828  4.56130         3.0   \n2761           63.10        active  511.626  5.60034         1.0   \n2762          316.23        active  487.947  5.01372         1.0   \n2763           50.00        active  332.360 -0.38290         4.0   \n2764          100.00        active  330.344 -0.77300         4.0   \n\n      NumHAcceptors     pIC50  \n0               6.0  6.154902  \n1               5.0  4.886057  \n2               5.0  5.568636  \n3               4.0  3.698970  \n4               6.0  5.537602  \n...             ...       ...  \n2760            5.0  9.036212  \n2761            8.0  7.199971  \n2762            7.0  6.499997  \n2763            8.0  7.301030  \n2764            8.0  7.000000  \n\n[2765 rows x 9 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>molecule_chembl_id</th>\n      <th>canonical_smiles</th>\n      <th>standard_value</th>\n      <th>class</th>\n      <th>MW</th>\n      <th>LogP</th>\n      <th>NumHDonors</th>\n      <th>NumHAcceptors</th>\n      <th>pIC50</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>CHEMBL88475</td>\n      <td>CCOc1cc(C(CC(=O)OC)N2C(=O)c3ccccc3C2=O)ccc1OC</td>\n      <td>700.00</td>\n      <td>active</td>\n      <td>383.400</td>\n      <td>2.99430</td>\n      <td>0.0</td>\n      <td>6.0</td>\n      <td>6.154902</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>CHEMBL89890</td>\n      <td>COc1ccc(C(CC(N)=O)N2C(=O)c3ccccc3C2=O)cc1OC</td>\n      <td>13000.00</td>\n      <td>inactive</td>\n      <td>354.362</td>\n      <td>1.91650</td>\n      <td>1.0</td>\n      <td>5.0</td>\n      <td>4.886057</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>CHEMBL419135</td>\n      <td>CCOc1cc(C(CC(N)=O)N2C(=O)c3ccccc3C2=O)ccc1OC</td>\n      <td>2700.00</td>\n      <td>intermediate</td>\n      <td>368.389</td>\n      <td>2.30660</td>\n      <td>1.0</td>\n      <td>5.0</td>\n      <td>5.568636</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>CHEMBL468</td>\n      <td>O=C1CCC(N2C(=O)c3ccccc3C2=O)C(=O)N1</td>\n      <td>200000.00</td>\n      <td>inactive</td>\n      <td>258.233</td>\n      <td>0.08780</td>\n      <td>1.0</td>\n      <td>4.0</td>\n      <td>3.698970</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>CHEMBL88935</td>\n      <td>COC(=O)CC(c1ccc(OC)c(OC)c1)N1C(=O)c2ccccc2C1=O</td>\n      <td>2900.00</td>\n      <td>intermediate</td>\n      <td>369.373</td>\n      <td>2.60420</td>\n      <td>0.0</td>\n      <td>6.0</td>\n      <td>5.537602</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>2760</th>\n      <td>CHEMBL4638643</td>\n      <td>COC[C@@](O)([C@@H](Nc1cc(F)cc2[nH]c(=O)ccc12)c...</td>\n      <td>0.92</td>\n      <td>active</td>\n      <td>492.828</td>\n      <td>4.56130</td>\n      <td>3.0</td>\n      <td>5.0</td>\n      <td>9.036212</td>\n    </tr>\n    <tr>\n      <th>2761</th>\n      <td>CHEMBL4639128</td>\n      <td>COCc1nc2cnc3cc(-c4c(C)noc4C)c(OC[C@H]4CCNC4)cc...</td>\n      <td>63.10</td>\n      <td>active</td>\n      <td>511.626</td>\n      <td>5.60034</td>\n      <td>1.0</td>\n      <td>8.0</td>\n      <td>7.199971</td>\n    </tr>\n    <tr>\n      <th>2762</th>\n      <td>CHEMBL4638144</td>\n      <td>COc1ccc2c(c1)C(c1ccc(Cl)cc1)=N[C@@H](NC(=O)OCc...</td>\n      <td>316.23</td>\n      <td>active</td>\n      <td>487.947</td>\n      <td>5.01372</td>\n      <td>1.0</td>\n      <td>7.0</td>\n      <td>6.499997</td>\n    </tr>\n    <tr>\n      <th>2763</th>\n      <td>CHEMBL4641965</td>\n      <td>CCCC#Cc1cc([C@@H]2O[C@H](CO)[C@@H](O)[C@H]2O)n...</td>\n      <td>50.00</td>\n      <td>active</td>\n      <td>332.360</td>\n      <td>-0.38290</td>\n      <td>4.0</td>\n      <td>8.0</td>\n      <td>7.301030</td>\n    </tr>\n    <tr>\n      <th>2764</th>\n      <td>CHEMBL4640462</td>\n      <td>Nc1ncnn2c([C@@H]3O[C@H](CO)[C@@H](O)[C@H]3O)cc...</td>\n      <td>100.00</td>\n      <td>active</td>\n      <td>330.344</td>\n      <td>-0.77300</td>\n      <td>4.0</td>\n      <td>8.0</td>\n      <td>7.000000</td>\n    </tr>\n  </tbody>\n</table>\n<p>2765 rows Ã— 9 columns</p>\n</div>"},"metadata":{}}],"execution_count":3},{"cell_type":"markdown","source":"**Melakukan transformasi class menjadi numeric ordinal**","metadata":{}},{"cell_type":"code","source":"# Mapping kelas kategori (class) ke nilai numerik (0,1,2)\nmapping = {'active': 0, 'inactive': 1, 'intermediate': 2}\ndf_lipinsky['class_numeric'] = df_lipinsky['class'].map(mapping)\n\ndf_lipinsky","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T06:47:35.845668Z","iopub.execute_input":"2024-11-19T06:47:35.846028Z","iopub.status.idle":"2024-11-19T06:47:35.866791Z","shell.execute_reply.started":"2024-11-19T06:47:35.845998Z","shell.execute_reply":"2024-11-19T06:47:35.865697Z"}},"outputs":[{"execution_count":4,"output_type":"execute_result","data":{"text/plain":"     molecule_chembl_id                                   canonical_smiles  \\\n0           CHEMBL88475      CCOc1cc(C(CC(=O)OC)N2C(=O)c3ccccc3C2=O)ccc1OC   \n1           CHEMBL89890        COc1ccc(C(CC(N)=O)N2C(=O)c3ccccc3C2=O)cc1OC   \n2          CHEMBL419135       CCOc1cc(C(CC(N)=O)N2C(=O)c3ccccc3C2=O)ccc1OC   \n3             CHEMBL468                O=C1CCC(N2C(=O)c3ccccc3C2=O)C(=O)N1   \n4           CHEMBL88935     COC(=O)CC(c1ccc(OC)c(OC)c1)N1C(=O)c2ccccc2C1=O   \n...                 ...                                                ...   \n2760      CHEMBL4638643  COC[C@@](O)([C@@H](Nc1cc(F)cc2[nH]c(=O)ccc12)c...   \n2761      CHEMBL4639128  COCc1nc2cnc3cc(-c4c(C)noc4C)c(OC[C@H]4CCNC4)cc...   \n2762      CHEMBL4638144  COc1ccc2c(c1)C(c1ccc(Cl)cc1)=N[C@@H](NC(=O)OCc...   \n2763      CHEMBL4641965  CCCC#Cc1cc([C@@H]2O[C@H](CO)[C@@H](O)[C@H]2O)n...   \n2764      CHEMBL4640462  Nc1ncnn2c([C@@H]3O[C@H](CO)[C@@H](O)[C@H]3O)cc...   \n\n      standard_value         class       MW     LogP  NumHDonors  \\\n0             700.00        active  383.400  2.99430         0.0   \n1           13000.00      inactive  354.362  1.91650         1.0   \n2            2700.00  intermediate  368.389  2.30660         1.0   \n3          200000.00      inactive  258.233  0.08780         1.0   \n4            2900.00  intermediate  369.373  2.60420         0.0   \n...              ...           ...      ...      ...         ...   \n2760            0.92        active  492.828  4.56130         3.0   \n2761           63.10        active  511.626  5.60034         1.0   \n2762          316.23        active  487.947  5.01372         1.0   \n2763           50.00        active  332.360 -0.38290         4.0   \n2764          100.00        active  330.344 -0.77300         4.0   \n\n      NumHAcceptors     pIC50  class_numeric  \n0               6.0  6.154902              0  \n1               5.0  4.886057              1  \n2               5.0  5.568636              2  \n3               4.0  3.698970              1  \n4               6.0  5.537602              2  \n...             ...       ...            ...  \n2760            5.0  9.036212              0  \n2761            8.0  7.199971              0  \n2762            7.0  6.499997              0  \n2763            8.0  7.301030              0  \n2764            8.0  7.000000              0  \n\n[2765 rows x 10 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>molecule_chembl_id</th>\n      <th>canonical_smiles</th>\n      <th>standard_value</th>\n      <th>class</th>\n      <th>MW</th>\n      <th>LogP</th>\n      <th>NumHDonors</th>\n      <th>NumHAcceptors</th>\n      <th>pIC50</th>\n      <th>class_numeric</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>CHEMBL88475</td>\n      <td>CCOc1cc(C(CC(=O)OC)N2C(=O)c3ccccc3C2=O)ccc1OC</td>\n      <td>700.00</td>\n      <td>active</td>\n      <td>383.400</td>\n      <td>2.99430</td>\n      <td>0.0</td>\n      <td>6.0</td>\n      <td>6.154902</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>CHEMBL89890</td>\n      <td>COc1ccc(C(CC(N)=O)N2C(=O)c3ccccc3C2=O)cc1OC</td>\n      <td>13000.00</td>\n      <td>inactive</td>\n      <td>354.362</td>\n      <td>1.91650</td>\n      <td>1.0</td>\n      <td>5.0</td>\n      <td>4.886057</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>CHEMBL419135</td>\n      <td>CCOc1cc(C(CC(N)=O)N2C(=O)c3ccccc3C2=O)ccc1OC</td>\n      <td>2700.00</td>\n      <td>intermediate</td>\n      <td>368.389</td>\n      <td>2.30660</td>\n      <td>1.0</td>\n      <td>5.0</td>\n      <td>5.568636</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>CHEMBL468</td>\n      <td>O=C1CCC(N2C(=O)c3ccccc3C2=O)C(=O)N1</td>\n      <td>200000.00</td>\n      <td>inactive</td>\n      <td>258.233</td>\n      <td>0.08780</td>\n      <td>1.0</td>\n      <td>4.0</td>\n      <td>3.698970</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>CHEMBL88935</td>\n      <td>COC(=O)CC(c1ccc(OC)c(OC)c1)N1C(=O)c2ccccc2C1=O</td>\n      <td>2900.00</td>\n      <td>intermediate</td>\n      <td>369.373</td>\n      <td>2.60420</td>\n      <td>0.0</td>\n      <td>6.0</td>\n      <td>5.537602</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>2760</th>\n      <td>CHEMBL4638643</td>\n      <td>COC[C@@](O)([C@@H](Nc1cc(F)cc2[nH]c(=O)ccc12)c...</td>\n      <td>0.92</td>\n      <td>active</td>\n      <td>492.828</td>\n      <td>4.56130</td>\n      <td>3.0</td>\n      <td>5.0</td>\n      <td>9.036212</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2761</th>\n      <td>CHEMBL4639128</td>\n      <td>COCc1nc2cnc3cc(-c4c(C)noc4C)c(OC[C@H]4CCNC4)cc...</td>\n      <td>63.10</td>\n      <td>active</td>\n      <td>511.626</td>\n      <td>5.60034</td>\n      <td>1.0</td>\n      <td>8.0</td>\n      <td>7.199971</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2762</th>\n      <td>CHEMBL4638144</td>\n      <td>COc1ccc2c(c1)C(c1ccc(Cl)cc1)=N[C@@H](NC(=O)OCc...</td>\n      <td>316.23</td>\n      <td>active</td>\n      <td>487.947</td>\n      <td>5.01372</td>\n      <td>1.0</td>\n      <td>7.0</td>\n      <td>6.499997</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2763</th>\n      <td>CHEMBL4641965</td>\n      <td>CCCC#Cc1cc([C@@H]2O[C@H](CO)[C@@H](O)[C@H]2O)n...</td>\n      <td>50.00</td>\n      <td>active</td>\n      <td>332.360</td>\n      <td>-0.38290</td>\n      <td>4.0</td>\n      <td>8.0</td>\n      <td>7.301030</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2764</th>\n      <td>CHEMBL4640462</td>\n      <td>Nc1ncnn2c([C@@H]3O[C@H](CO)[C@@H](O)[C@H]3O)cc...</td>\n      <td>100.00</td>\n      <td>active</td>\n      <td>330.344</td>\n      <td>-0.77300</td>\n      <td>4.0</td>\n      <td>8.0</td>\n      <td>7.000000</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>2765 rows Ã— 10 columns</p>\n</div>"},"metadata":{}}],"execution_count":4},{"cell_type":"markdown","source":"**dataset 2 (finger print)**","metadata":{}},{"cell_type":"code","source":"df_fp = pd.read_csv('/kaggle/input/docking-md/Marine_Drug_Discovery/SHP2_Enzymes/MACHINE_LEARNING/SHP2_Enzymes_06_PBMC_bioactivity_data_final_3class_fp.csv')\ndf_fp = df_fp.drop(columns='pIC50')\ndf_fp","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T06:47:38.515221Z","iopub.execute_input":"2024-11-19T06:47:38.516208Z","iopub.status.idle":"2024-11-19T06:47:38.620458Z","shell.execute_reply.started":"2024-11-19T06:47:38.516164Z","shell.execute_reply":"2024-11-19T06:47:38.619242Z"}},"outputs":[{"execution_count":5,"output_type":"execute_result","data":{"text/plain":"      SubFP1  SubFP2  SubFP3  SubFP4  SubFP5  SubFP6  SubFP7  SubFP8  SubFP9  \\\n0          1       1       0       0       0       0       0       0       0   \n1          0       1       0       0       0       0       0       0       0   \n2          1       1       0       0       0       0       0       0       0   \n3          0       1       0       0       0       0       0       0       0   \n4          0       1       0       0       0       0       0       0       0   \n...      ...     ...     ...     ...     ...     ...     ...     ...     ...   \n2760       0       0       0       0       1       0       0       0       1   \n2761       1       1       1       0       0       0       0       0       0   \n2762       1       0       0       0       0       0       0       0       0   \n2763       1       1       0       0       0       1       0       0       0   \n2764       0       1       1       0       0       1       0       0       0   \n\n      SubFP10  ...  SubFP298  SubFP299  SubFP300  SubFP301  SubFP302  \\\n0           0  ...         0         0         1         1         1   \n1           0  ...         0         0         1         1         1   \n2           0  ...         0         0         1         1         1   \n3           0  ...         0         0         1         1         1   \n4           0  ...         0         0         1         1         1   \n...       ...  ...       ...       ...       ...       ...       ...   \n2760        0  ...         0         0         1         1         1   \n2761        0  ...         0         0         1         1         1   \n2762        0  ...         0         0         1         1         1   \n2763        0  ...         0         0         1         1         1   \n2764        0  ...         0         0         1         1         1   \n\n      SubFP303  SubFP304  SubFP305  SubFP306  SubFP307  \n0            0         0         0         0         1  \n1            0         0         0         0         1  \n2            0         0         0         0         1  \n3            0         0         0         0         1  \n4            0         0         0         0         1  \n...        ...       ...       ...       ...       ...  \n2760         1         0         0         0         1  \n2761         0         0         0         0         1  \n2762         0         0         0         0         1  \n2763         0         0         0         0         1  \n2764         0         0         0         0         1  \n\n[2765 rows x 307 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>SubFP1</th>\n      <th>SubFP2</th>\n      <th>SubFP3</th>\n      <th>SubFP4</th>\n      <th>SubFP5</th>\n      <th>SubFP6</th>\n      <th>SubFP7</th>\n      <th>SubFP8</th>\n      <th>SubFP9</th>\n      <th>SubFP10</th>\n      <th>...</th>\n      <th>SubFP298</th>\n      <th>SubFP299</th>\n      <th>SubFP300</th>\n      <th>SubFP301</th>\n      <th>SubFP302</th>\n      <th>SubFP303</th>\n      <th>SubFP304</th>\n      <th>SubFP305</th>\n      <th>SubFP306</th>\n      <th>SubFP307</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>2760</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2761</th>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2762</th>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2763</th>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2764</th>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n<p>2765 rows Ã— 307 columns</p>\n</div>"},"metadata":{}}],"execution_count":5},{"cell_type":"markdown","source":"**dataset 3 (combined)**","metadata":{}},{"cell_type":"code","source":"df_combined = pd.concat([df_lipinsky,df_fp], axis=1)\ndf_combined.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T06:47:42.587023Z","iopub.execute_input":"2024-11-19T06:47:42.587986Z","iopub.status.idle":"2024-11-19T06:47:42.612914Z","shell.execute_reply.started":"2024-11-19T06:47:42.587944Z","shell.execute_reply":"2024-11-19T06:47:42.611943Z"}},"outputs":[{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"  molecule_chembl_id                                canonical_smiles  \\\n0        CHEMBL88475   CCOc1cc(C(CC(=O)OC)N2C(=O)c3ccccc3C2=O)ccc1OC   \n1        CHEMBL89890     COc1ccc(C(CC(N)=O)N2C(=O)c3ccccc3C2=O)cc1OC   \n2       CHEMBL419135    CCOc1cc(C(CC(N)=O)N2C(=O)c3ccccc3C2=O)ccc1OC   \n3          CHEMBL468             O=C1CCC(N2C(=O)c3ccccc3C2=O)C(=O)N1   \n4        CHEMBL88935  COC(=O)CC(c1ccc(OC)c(OC)c1)N1C(=O)c2ccccc2C1=O   \n\n   standard_value         class       MW    LogP  NumHDonors  NumHAcceptors  \\\n0           700.0        active  383.400  2.9943         0.0            6.0   \n1         13000.0      inactive  354.362  1.9165         1.0            5.0   \n2          2700.0  intermediate  368.389  2.3066         1.0            5.0   \n3        200000.0      inactive  258.233  0.0878         1.0            4.0   \n4          2900.0  intermediate  369.373  2.6042         0.0            6.0   \n\n      pIC50  class_numeric  ...  SubFP298  SubFP299  SubFP300  SubFP301  \\\n0  6.154902              0  ...         0         0         1         1   \n1  4.886057              1  ...         0         0         1         1   \n2  5.568636              2  ...         0         0         1         1   \n3  3.698970              1  ...         0         0         1         1   \n4  5.537602              2  ...         0         0         1         1   \n\n   SubFP302  SubFP303  SubFP304  SubFP305  SubFP306  SubFP307  \n0         1         0         0         0         0         1  \n1         1         0         0         0         0         1  \n2         1         0         0         0         0         1  \n3         1         0         0         0         0         1  \n4         1         0         0         0         0         1  \n\n[5 rows x 317 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>molecule_chembl_id</th>\n      <th>canonical_smiles</th>\n      <th>standard_value</th>\n      <th>class</th>\n      <th>MW</th>\n      <th>LogP</th>\n      <th>NumHDonors</th>\n      <th>NumHAcceptors</th>\n      <th>pIC50</th>\n      <th>class_numeric</th>\n      <th>...</th>\n      <th>SubFP298</th>\n      <th>SubFP299</th>\n      <th>SubFP300</th>\n      <th>SubFP301</th>\n      <th>SubFP302</th>\n      <th>SubFP303</th>\n      <th>SubFP304</th>\n      <th>SubFP305</th>\n      <th>SubFP306</th>\n      <th>SubFP307</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>CHEMBL88475</td>\n      <td>CCOc1cc(C(CC(=O)OC)N2C(=O)c3ccccc3C2=O)ccc1OC</td>\n      <td>700.0</td>\n      <td>active</td>\n      <td>383.400</td>\n      <td>2.9943</td>\n      <td>0.0</td>\n      <td>6.0</td>\n      <td>6.154902</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>CHEMBL89890</td>\n      <td>COc1ccc(C(CC(N)=O)N2C(=O)c3ccccc3C2=O)cc1OC</td>\n      <td>13000.0</td>\n      <td>inactive</td>\n      <td>354.362</td>\n      <td>1.9165</td>\n      <td>1.0</td>\n      <td>5.0</td>\n      <td>4.886057</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>CHEMBL419135</td>\n      <td>CCOc1cc(C(CC(N)=O)N2C(=O)c3ccccc3C2=O)ccc1OC</td>\n      <td>2700.0</td>\n      <td>intermediate</td>\n      <td>368.389</td>\n      <td>2.3066</td>\n      <td>1.0</td>\n      <td>5.0</td>\n      <td>5.568636</td>\n      <td>2</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>CHEMBL468</td>\n      <td>O=C1CCC(N2C(=O)c3ccccc3C2=O)C(=O)N1</td>\n      <td>200000.0</td>\n      <td>inactive</td>\n      <td>258.233</td>\n      <td>0.0878</td>\n      <td>1.0</td>\n      <td>4.0</td>\n      <td>3.698970</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>CHEMBL88935</td>\n      <td>COC(=O)CC(c1ccc(OC)c(OC)c1)N1C(=O)c2ccccc2C1=O</td>\n      <td>2900.0</td>\n      <td>intermediate</td>\n      <td>369.373</td>\n      <td>2.6042</td>\n      <td>0.0</td>\n      <td>6.0</td>\n      <td>5.537602</td>\n      <td>2</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 317 columns</p>\n</div>"},"metadata":{}}],"execution_count":6},{"cell_type":"code","source":"plt.figure(figsize=(10,10))\nsns.heatmap(df_combined.isna(), cmap=\"Blues\", cbar=False);","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T06:47:46.323289Z","iopub.execute_input":"2024-11-19T06:47:46.324177Z","iopub.status.idle":"2024-11-19T06:47:48.339666Z","shell.execute_reply.started":"2024-11-19T06:47:46.324138Z","shell.execute_reply":"2024-11-19T06:47:48.338612Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x1000 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":7},{"cell_type":"markdown","source":"## Data Preparasi","metadata":{}},{"cell_type":"code","source":"df = df_combined.drop(columns=[\"molecule_chembl_id\",\"canonical_smiles\",\"standard_value\",\"class\",\"pIC50\"])\ndf","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T06:47:53.417432Z","iopub.execute_input":"2024-11-19T06:47:53.418431Z","iopub.status.idle":"2024-11-19T06:47:53.443002Z","shell.execute_reply.started":"2024-11-19T06:47:53.418358Z","shell.execute_reply":"2024-11-19T06:47:53.441848Z"}},"outputs":[{"execution_count":8,"output_type":"execute_result","data":{"text/plain":"           MW     LogP  NumHDonors  NumHAcceptors  class_numeric  SubFP1  \\\n0     383.400  2.99430         0.0            6.0              0       1   \n1     354.362  1.91650         1.0            5.0              1       0   \n2     368.389  2.30660         1.0            5.0              2       1   \n3     258.233  0.08780         1.0            4.0              1       0   \n4     369.373  2.60420         0.0            6.0              2       0   \n...       ...      ...         ...            ...            ...     ...   \n2760  492.828  4.56130         3.0            5.0              0       0   \n2761  511.626  5.60034         1.0            8.0              0       1   \n2762  487.947  5.01372         1.0            7.0              0       1   \n2763  332.360 -0.38290         4.0            8.0              0       1   \n2764  330.344 -0.77300         4.0            8.0              0       0   \n\n      SubFP2  SubFP3  SubFP4  SubFP5  ...  SubFP298  SubFP299  SubFP300  \\\n0          1       0       0       0  ...         0         0         1   \n1          1       0       0       0  ...         0         0         1   \n2          1       0       0       0  ...         0         0         1   \n3          1       0       0       0  ...         0         0         1   \n4          1       0       0       0  ...         0         0         1   \n...      ...     ...     ...     ...  ...       ...       ...       ...   \n2760       0       0       0       1  ...         0         0         1   \n2761       1       1       0       0  ...         0         0         1   \n2762       0       0       0       0  ...         0         0         1   \n2763       1       0       0       0  ...         0         0         1   \n2764       1       1       0       0  ...         0         0         1   \n\n      SubFP301  SubFP302  SubFP303  SubFP304  SubFP305  SubFP306  SubFP307  \n0            1         1         0         0         0         0         1  \n1            1         1         0         0         0         0         1  \n2            1         1         0         0         0         0         1  \n3            1         1         0         0         0         0         1  \n4            1         1         0         0         0         0         1  \n...        ...       ...       ...       ...       ...       ...       ...  \n2760         1         1         1         0         0         0         1  \n2761         1         1         0         0         0         0         1  \n2762         1         1         0         0         0         0         1  \n2763         1         1         0         0         0         0         1  \n2764         1         1         0         0         0         0         1  \n\n[2765 rows x 312 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>MW</th>\n      <th>LogP</th>\n      <th>NumHDonors</th>\n      <th>NumHAcceptors</th>\n      <th>class_numeric</th>\n      <th>SubFP1</th>\n      <th>SubFP2</th>\n      <th>SubFP3</th>\n      <th>SubFP4</th>\n      <th>SubFP5</th>\n      <th>...</th>\n      <th>SubFP298</th>\n      <th>SubFP299</th>\n      <th>SubFP300</th>\n      <th>SubFP301</th>\n      <th>SubFP302</th>\n      <th>SubFP303</th>\n      <th>SubFP304</th>\n      <th>SubFP305</th>\n      <th>SubFP306</th>\n      <th>SubFP307</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>383.400</td>\n      <td>2.99430</td>\n      <td>0.0</td>\n      <td>6.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>354.362</td>\n      <td>1.91650</td>\n      <td>1.0</td>\n      <td>5.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>368.389</td>\n      <td>2.30660</td>\n      <td>1.0</td>\n      <td>5.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>258.233</td>\n      <td>0.08780</td>\n      <td>1.0</td>\n      <td>4.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>369.373</td>\n      <td>2.60420</td>\n      <td>0.0</td>\n      <td>6.0</td>\n      <td>2</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>2760</th>\n      <td>492.828</td>\n      <td>4.56130</td>\n      <td>3.0</td>\n      <td>5.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2761</th>\n      <td>511.626</td>\n      <td>5.60034</td>\n      <td>1.0</td>\n      <td>8.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2762</th>\n      <td>487.947</td>\n      <td>5.01372</td>\n      <td>1.0</td>\n      <td>7.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2763</th>\n      <td>332.360</td>\n      <td>-0.38290</td>\n      <td>4.0</td>\n      <td>8.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2764</th>\n      <td>330.344</td>\n      <td>-0.77300</td>\n      <td>4.0</td>\n      <td>8.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n<p>2765 rows Ã— 312 columns</p>\n</div>"},"metadata":{}}],"execution_count":8},{"cell_type":"code","source":"X = df.drop(columns='class_numeric')\ny = df.class_numeric","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T03:17:29.120810Z","iopub.execute_input":"2024-11-19T03:17:29.121226Z","iopub.status.idle":"2024-11-19T03:17:29.128670Z","shell.execute_reply.started":"2024-11-19T03:17:29.121192Z","shell.execute_reply":"2024-11-19T03:17:29.127322Z"}},"outputs":[],"execution_count":27},{"cell_type":"code","source":"X.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T03:17:32.172873Z","iopub.execute_input":"2024-11-19T03:17:32.173289Z","iopub.status.idle":"2024-11-19T03:17:32.191652Z","shell.execute_reply.started":"2024-11-19T03:17:32.173240Z","shell.execute_reply":"2024-11-19T03:17:32.190618Z"}},"outputs":[{"execution_count":28,"output_type":"execute_result","data":{"text/plain":"        MW    LogP  NumHDonors  NumHAcceptors  SubFP1  SubFP2  SubFP3  SubFP4  \\\n0  383.400  2.9943         0.0            6.0       1       1       0       0   \n1  354.362  1.9165         1.0            5.0       0       1       0       0   \n2  368.389  2.3066         1.0            5.0       1       1       0       0   \n3  258.233  0.0878         1.0            4.0       0       1       0       0   \n4  369.373  2.6042         0.0            6.0       0       1       0       0   \n\n   SubFP5  SubFP6  ...  SubFP298  SubFP299  SubFP300  SubFP301  SubFP302  \\\n0       0       0  ...         0         0         1         1         1   \n1       0       0  ...         0         0         1         1         1   \n2       0       0  ...         0         0         1         1         1   \n3       0       0  ...         0         0         1         1         1   \n4       0       0  ...         0         0         1         1         1   \n\n   SubFP303  SubFP304  SubFP305  SubFP306  SubFP307  \n0         0         0         0         0         1  \n1         0         0         0         0         1  \n2         0         0         0         0         1  \n3         0         0         0         0         1  \n4         0         0         0         0         1  \n\n[5 rows x 311 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>MW</th>\n      <th>LogP</th>\n      <th>NumHDonors</th>\n      <th>NumHAcceptors</th>\n      <th>SubFP1</th>\n      <th>SubFP2</th>\n      <th>SubFP3</th>\n      <th>SubFP4</th>\n      <th>SubFP5</th>\n      <th>SubFP6</th>\n      <th>...</th>\n      <th>SubFP298</th>\n      <th>SubFP299</th>\n      <th>SubFP300</th>\n      <th>SubFP301</th>\n      <th>SubFP302</th>\n      <th>SubFP303</th>\n      <th>SubFP304</th>\n      <th>SubFP305</th>\n      <th>SubFP306</th>\n      <th>SubFP307</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>383.400</td>\n      <td>2.9943</td>\n      <td>0.0</td>\n      <td>6.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>354.362</td>\n      <td>1.9165</td>\n      <td>1.0</td>\n      <td>5.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>368.389</td>\n      <td>2.3066</td>\n      <td>1.0</td>\n      <td>5.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>258.233</td>\n      <td>0.0878</td>\n      <td>1.0</td>\n      <td>4.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>369.373</td>\n      <td>2.6042</td>\n      <td>0.0</td>\n      <td>6.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 311 columns</p>\n</div>"},"metadata":{}}],"execution_count":28},{"cell_type":"code","source":"y.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T03:17:37.873728Z","iopub.execute_input":"2024-11-19T03:17:37.874132Z","iopub.status.idle":"2024-11-19T03:17:37.884070Z","shell.execute_reply.started":"2024-11-19T03:17:37.874096Z","shell.execute_reply":"2024-11-19T03:17:37.882792Z"}},"outputs":[{"execution_count":29,"output_type":"execute_result","data":{"text/plain":"0    0\n1    1\n2    2\n3    1\n4    2\nName: class_numeric, dtype: int64"},"metadata":{}}],"execution_count":29},{"cell_type":"markdown","source":"# **A | Menggunakan KNN**\n\n**KNN** ini simpelnya adalah algoritma yang mempertimbangkan relasi (tetangga) terdekatnya untuk mendapatkan keputusan sehingga sering disebut sebagai lazy learner. Misalkan pada ilutrasi diatas, ada kumpulan lingkaran yang terdiri dari dua warna yaitu **merah (kumpulan laki-laki), biru (kumpulan perempuan)**. Mari kita lihat beberapa kasus berikut:\n\nJika tiba-tiba ada **sebuah objek (kotak) yang tidak terdefinisi berada pada koordinat(-3.5, 0)**, maka kira-kira objek tersebut apakah laki-laki atau perempuan?.\n- berdasarkan tetangga, lebih dekat kepada lingkaran warna biru, artinya diprediksi adalah perempuan\n\nJika tiba-tiba ada **sebuah objek (kotak) yang tidak terdefinisi berada pada koordinat(-7.5, 0)**, maka kira-kira objek tersebut apakah laki-laki atau perempuan?.\n- berdasarkan tetangga, lebih dekat kepada lingkaran warna merah, artinya diprediksi adalah laki-laki\n\nBerdasarkan data kumpulan diatas maka akan dibuat sebuat rule yang terlihat seperti pada gambar prediksi diatas **(klik show_decision)**. Sehingga nampak jelas batas-batas keputusan yang akan di ambil. \n\nNamun beberapa keputusan tidak dapat diambil jika terdapat data **noise**. Contoh noise pada kasus diatas adalah jika terdapat satu data linkaran merah (laki-laki) yang berada pada kumpulan perempuan (lingkaran biru), misalkan posisinya berapa pada koordinat (-3, 0). Akibatnya, gara-gara data ini makan rule akan bergeser lelebar ke kanan yang menyebabkan keputusan menjadi tidak stabil.\n\nUntuk mengatasi masalah tersebut, itulah kenapa algoritma ini bukan bergantung pada **satu tetangga saja (Near Neighbor)**, tetapi terdapat K Nearest Neighbor yang artinya bisa lebih dari, sehingga keputusan bisa lebih akurat.\n\nPada kasus diatas: **terdapat satu data linkaran merah (laki-laki) yang berada pada kumpulan perempuan (lingkaran biru), misalkan posisinya berapa pada koordinat (-3, 0)**, maka akan diambil 3 titik terdekat dan dilakukan vooting. Keputusannya bagaimana?:\n- jika berdasarkan data noise tersebut memili 2 tetangga terdekat perempuan, dan 1 tetangga terdekat laki-laki, maka noise tersebut dianggap sebagai perempuan\n- jika berdasarkan data noise tersebut memili 2 tetangga terdekat laki-laki, dan 1 tetangga terdekat perempuan, maka noise tersebut dianggap sebagai laki-laki\n**untuk ilustrasi silahkan geser N pada visual demo diatas**\n\nSelain jumlah tetangga, jarak antar tetangga terhadap noise juga menjadi pertimbangan penting, hal ini dikenal dengan nama **weighting**. Semakin jauh tetangga terhadap noise, akan dianggap tetangga tersebut tidak penting dan dapat diabaikan.\n\nLalu, bagaimana dengan menentukan **weighting**?","metadata":{}},{"cell_type":"code","source":"from luwiji.knn import illustration, demo\ndemo.knn()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T06:44:54.528357Z","iopub.execute_input":"2024-11-19T06:44:54.529444Z","iopub.status.idle":"2024-11-19T06:44:54.829660Z","shell.execute_reply.started":"2024-11-19T06:44:54.529340Z","shell.execute_reply":"2024-11-19T06:44:54.828513Z"}},"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/luwiji/knn/_base.py:33: UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored\n  plt.scatter(X_test[:, 0], X_test[:, 1], c=y_pred, s=100, cmap='bwr', edgecolors='k', marker='D')\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 700x700 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":2},{"cell_type":"code","source":"illustration.knn_distance","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T06:51:42.179189Z","iopub.execute_input":"2024-11-19T06:51:42.179628Z","iopub.status.idle":"2024-11-19T06:51:42.187586Z","shell.execute_reply.started":"2024-11-19T06:51:42.179583Z","shell.execute_reply":"2024-11-19T06:51:42.186453Z"}},"outputs":[{"execution_count":11,"output_type":"execute_result","data":{"image/png":"","text/plain":"<IPython.core.display.Image object>"},"metadata":{"image/png":{"width":900}}}],"execution_count":11},{"cell_type":"markdown","source":"terdapat 3 jenis metode pembobotan di KNN:\n1. Euclidean distance: dihitung seperti menghitung sisi miring pada pythagoras dan langsung tembak lurus\n2. Manhattan distance: berbeda dengan euclidean, manhattan mempertimbangkan hambatan, tidak tembak lurus\n3. Chebysev distance: gerak catur raja, jadi mirip gabungan antara euclidean dan manhattan","metadata":{}},{"cell_type":"markdown","source":"## 1 | Based Model","metadata":{}},{"cell_type":"code","source":"from sklearn.neighbors import KNeighborsClassifier # Memilih classifier karena berdasarkan target kita (survived) yang juga merupakan kategori\nknn = KNeighborsClassifier(n_neighbors=1)\nknn.fit(X, y)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T03:18:04.566925Z","iopub.execute_input":"2024-11-19T03:18:04.567339Z","iopub.status.idle":"2024-11-19T03:18:04.589988Z","shell.execute_reply.started":"2024-11-19T03:18:04.567300Z","shell.execute_reply":"2024-11-19T03:18:04.588730Z"}},"outputs":[{"execution_count":30,"output_type":"execute_result","data":{"text/plain":"KNeighborsClassifier(n_neighbors=1)","text/html":"<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KNeighborsClassifier(n_neighbors=1)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KNeighborsClassifier</label><div class=\"sk-toggleable__content\"><pre>KNeighborsClassifier(n_neighbors=1)</pre></div></div></div></div></div>"},"metadata":{}}],"execution_count":30},{"cell_type":"code","source":"knn.score(X,y)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T03:18:18.401013Z","iopub.execute_input":"2024-11-19T03:18:18.401430Z","iopub.status.idle":"2024-11-19T03:18:18.802100Z","shell.execute_reply.started":"2024-11-19T03:18:18.401398Z","shell.execute_reply":"2024-11-19T03:18:18.801093Z"}},"outputs":[{"execution_count":31,"output_type":"execute_result","data":{"text/plain":"0.979746835443038"},"metadata":{}}],"execution_count":31},{"cell_type":"markdown","source":"**Score ini hanya nilai belajarnya** saja tidak memiliki split data train atupun test dan bahkan validasi. **Hasil ini belum mencerminkan konsep learning sesungguhnya.**","metadata":{}},{"cell_type":"markdown","source":"## 2 | Menggunakan Splitting","metadata":{}},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"illustration.train_test_split","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T03:29:20.328722Z","iopub.execute_input":"2024-11-19T03:29:20.329105Z","iopub.status.idle":"2024-11-19T03:29:20.337492Z","shell.execute_reply.started":"2024-11-19T03:29:20.329075Z","shell.execute_reply":"2024-11-19T03:29:20.336313Z"}},"outputs":[{"execution_count":32,"output_type":"execute_result","data":{"image/png":"","text/plain":"<IPython.core.display.Image object>"},"metadata":{"image/png":{"width":900}}}],"execution_count":32},{"cell_type":"markdown","source":"Ada dua macam split:\n1. Split untuk data dengan problem regresi proses split bisa langsung diacak (shuffle split) secara random, piliha 80% untuk train (membuat model/rule) dan 20% untuk test (menguji model/rule)\n2. Split untuk data dengan problem klasifikasi proses tidak bisa langsung diacak, harus hati-hati. Misalkan dataset terdiri dari 2 kategori yaitu kucing dan tikus. Jika diacak random, ada kemungkinan ketika split, data train terdiri dari 100% kucing sedangkan data test terdiri dari 100& tikus. Artinya, model belajar tentang kucing namun ujiannya dikasih soal tentang tikus, sehingga model tidak valid.","metadata":{}},{"cell_type":"code","source":"X.shape, y.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T03:34:50.314516Z","iopub.execute_input":"2024-11-19T03:34:50.314966Z","iopub.status.idle":"2024-11-19T03:34:50.322649Z","shell.execute_reply.started":"2024-11-19T03:34:50.314925Z","shell.execute_reply":"2024-11-19T03:34:50.321471Z"}},"outputs":[{"execution_count":35,"output_type":"execute_result","data":{"text/plain":"((2765, 311), (2765,))"},"metadata":{}}],"execution_count":35},{"cell_type":"code","source":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, stratify=y, random_state=42)\nX_train.shape, X_test.shape, y_train.shape, y_test.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T03:31:16.450792Z","iopub.execute_input":"2024-11-19T03:31:16.451198Z","iopub.status.idle":"2024-11-19T03:31:16.470044Z","shell.execute_reply.started":"2024-11-19T03:31:16.451167Z","shell.execute_reply":"2024-11-19T03:31:16.468360Z"}},"outputs":[{"execution_count":33,"output_type":"execute_result","data":{"text/plain":"((2212, 311), (553, 311), (2212,), (553,))"},"metadata":{}}],"execution_count":33},{"cell_type":"markdown","source":"Penjelasan hasil:\n* X.shape: (2765, 311) -> terdapat total features sebanyak 2765 Baris dan 311 kolom\n* y.shape: (2765,) -> terdapat total label sebanyak 2765 baris dan 1 kolom\n* X_train.shape: (2212, 311) -> hasil split dari 80% total features, 2212 baris dan 311 kolom\n* y_train.shape: (2212,) -> hasil split dari 80% total label, 2212 baris dan 1 kolom\n* X_test.shape: (553, 311) -> hasil split dari 20% total features, 553 baris dan 311 kolom\n* y_test.shape: (553,) -> hasil split dari 20% total labels, 553 baris dan 1 kolom","metadata":{}},{"cell_type":"markdown","source":"**Proses Fit Model**","metadata":{}},{"cell_type":"code","source":"knn = KNeighborsClassifier(n_neighbors=1)\nknn.fit(X_train, y_train)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T03:37:57.348328Z","iopub.execute_input":"2024-11-19T03:37:57.348761Z","iopub.status.idle":"2024-11-19T03:37:57.370903Z","shell.execute_reply.started":"2024-11-19T03:37:57.348724Z","shell.execute_reply":"2024-11-19T03:37:57.369728Z"}},"outputs":[{"execution_count":36,"output_type":"execute_result","data":{"text/plain":"KNeighborsClassifier(n_neighbors=1)","text/html":"<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KNeighborsClassifier(n_neighbors=1)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KNeighborsClassifier</label><div class=\"sk-toggleable__content\"><pre>KNeighborsClassifier(n_neighbors=1)</pre></div></div></div></div></div>"},"metadata":{}}],"execution_count":36},{"cell_type":"markdown","source":"**Cek Score**","metadata":{}},{"cell_type":"code","source":"knn.score(X_train, y_train), knn.score(X_test, y_test)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T03:38:10.110196Z","iopub.execute_input":"2024-11-19T03:38:10.110610Z","iopub.status.idle":"2024-11-19T03:38:10.348952Z","shell.execute_reply.started":"2024-11-19T03:38:10.110574Z","shell.execute_reply":"2024-11-19T03:38:10.347894Z"}},"outputs":[{"execution_count":37,"output_type":"execute_result","data":{"text/plain":"(0.9837251356238698, 0.6184448462929476)"},"metadata":{}}],"execution_count":37},{"cell_type":"markdown","source":"**Hasil akhir:**\n- `knn.score(X_train, y_train)`= 0.98 -> nilai pretest = 0.98\n- `knn.score(X_test, y_test)`= 0.62 -> nilai posttest = 0.62\n\nModel yang sudah kita buat ini ketika belajar sudah cukup baik, namun ketika di uji tidak lebih baik dari nilai ketika belajar seolah-olah soal dipaksakan agar sama dengan soal training. Istilah lain untuk kasus diatas dikenal dengan nama **`OVERFIT`**","metadata":{}},{"cell_type":"markdown","source":"","metadata":{}},{"cell_type":"markdown","source":"## 3 | Menggunakan K-fold Cross Validation","metadata":{}},{"cell_type":"code","source":"illustration.kfold_cv","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T03:41:54.932544Z","iopub.execute_input":"2024-11-19T03:41:54.932955Z","iopub.status.idle":"2024-11-19T03:41:54.940493Z","shell.execute_reply.started":"2024-11-19T03:41:54.932922Z","shell.execute_reply":"2024-11-19T03:41:54.939312Z"}},"outputs":[{"execution_count":38,"output_type":"execute_result","data":{"image/png":"","text/plain":"<IPython.core.display.Image object>"},"metadata":{"image/png":{"width":700}}}],"execution_count":38},{"cell_type":"markdown","source":"**Penjelasan gambar:**\n1. Dataset terdiri dari 100 data/soal akan di pecah (shuffle) menjadi 4 bagian -> masing-masing 25% test_split (25 soal berbeda)\n2. Karena 25% artinya agar 100% maka akan ada 4 skenario dimana 25% soal test (test_split) akan disebar secara merata pada 4 skenario yang ada dan ditest satu persatu\n3. Score akhir (CV SCORE) diambil dari rata-rata keempat skenario tersebut\n4. Hal tersebut dilakukan untuk mengurangi kemungkinan kebetulan, karena tiap bagian soal di uji satu persatu disetiap skenario","metadata":{}},{"cell_type":"code","source":"from sklearn.model_selection import cross_val_score","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T03:44:47.944460Z","iopub.execute_input":"2024-11-19T03:44:47.944925Z","iopub.status.idle":"2024-11-19T03:44:47.950342Z","shell.execute_reply.started":"2024-11-19T03:44:47.944891Z","shell.execute_reply":"2024-11-19T03:44:47.949133Z"}},"outputs":[],"execution_count":39},{"cell_type":"code","source":"knn = KNeighborsClassifier(n_neighbors=1)\ncross_val_score(knn, X, y, cv=3) # tidak perlu fitting\ncross_val_score(knn, X, y).mean()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T03:47:01.219091Z","iopub.execute_input":"2024-11-19T03:47:01.219525Z","iopub.status.idle":"2024-11-19T03:47:01.812456Z","shell.execute_reply.started":"2024-11-19T03:47:01.219490Z","shell.execute_reply":"2024-11-19T03:47:01.811098Z"}},"outputs":[{"execution_count":46,"output_type":"execute_result","data":{"text/plain":"0.3960216998191682"},"metadata":{}}],"execution_count":46},{"cell_type":"markdown","source":"**Menggunakan Cross Val malah menjadi semakin turun, hal ini sangat menarik!**","metadata":{"execution":{"iopub.status.busy":"2024-11-19T03:45:37.935873Z","iopub.execute_input":"2024-11-19T03:45:37.936293Z","iopub.status.idle":"2024-11-19T03:45:38.280354Z","shell.execute_reply.started":"2024-11-19T03:45:37.936241Z","shell.execute_reply":"2024-11-19T03:45:38.279196Z"}}},{"cell_type":"markdown","source":"## 4 | Improve Model Melalui Data","metadata":{}},{"cell_type":"markdown","source":"Secara umum untuk mengimprove model kita, dapat dilakukan dengan 2 cara:\n1. improve melalui data **(`featured engineering`)**\n2. improve melalui model **(`tuning model yang sedang digunakan`** atau **`menggunakan model berbeda`)**","metadata":{}},{"cell_type":"markdown","source":"## Improvement melalui data (Feature engineering)\n\nTerdapat banyak sekali metode feature engineering, tergantung pada kondisi datanya. \n- **Feature scalling**\n  - MinMax\n  - Standard\n  - Robust\n- **Feature transformation**\n  - Logaritmic\n  - Square\n  - Trigonometric\n- **Type conversion**\n  - Categorical to numerical (encoding & hashing)\n  - Numerical to categorical (binning)\n- **Adding feature**\n  - Domain knowledge\n  - Feature crossing\n  - Feature summation or differencing\n- **Reducing feature**\n  - Dimensionality reduction\n  - Feature importance and section\n- **Text data**\n  - Flattening\n  - Filtering\n  - Chunking\n  \nKedapannya kita akan bahas semuanya satu persatu, namun pembahasan juga akan disesuikan dengan data yang sedang dibahas.","metadata":{}},{"cell_type":"code","source":"demo.knn_scaling()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T03:50:22.361469Z","iopub.execute_input":"2024-11-19T03:50:22.361907Z","iopub.status.idle":"2024-11-19T03:50:22.587603Z","shell.execute_reply.started":"2024-11-19T03:50:22.361836Z","shell.execute_reply":"2024-11-19T03:50:22.586496Z"}},"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/luwiji/knn/_base.py:68: UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored\n  plt.scatter(X_test[:, 0], X_test[:, 1], c=y_pred, s=100, cmap='bwr', edgecolors='k', marker='D')\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 1500x600 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":47},{"cell_type":"code","source":"illustration.knn_scaling","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T03:51:09.873599Z","iopub.execute_input":"2024-11-19T03:51:09.873981Z","iopub.status.idle":"2024-11-19T03:51:09.883449Z","shell.execute_reply.started":"2024-11-19T03:51:09.873951Z","shell.execute_reply":"2024-11-19T03:51:09.882189Z"}},"outputs":[{"execution_count":48,"output_type":"execute_result","data":{"image/png":"","text/plain":"<IPython.core.display.Image object>"},"metadata":{"image/png":{"width":900}}}],"execution_count":48},{"cell_type":"markdown","source":"Misal jika punya senyawa dengan molekul **weight 500 mW** anak dan **LogP =2**  dan  dimasukkan rumus pytagorian (rumus menghitung jarak), maka = ``âˆš500^2 + 2^2`. Berdasarkan perhitungan itu, data LogP menjadi **tidak bermakna sehingga seolah-olah data terhapus**, padahalnya sebenarnya bermakna. ","metadata":{}},{"cell_type":"markdown","source":"MinMaxScaller adalah sebuah perhitungan matematika yang dapat menggencet rentang gaji dari 0 - 1000000 menjadi 0 - 1. \n\nFormula secara matematikanya dalah sbb: **`Xnew = (Xold - Xmin)/(Xmax - Xmin)`**\n\n**Dengan melakukan scalling jadi masuk akal sehingga KKN dapat melakukan prediksi.**","metadata":{}},{"cell_type":"code","source":"from sklearn.preprocessing import MinMaxScaler\nscaler = MinMaxScaler()\nscaler.fit (X_train)\n\nX_train_scaled = scaler.transform(X_train)\nX_test_scaled = scaler.transform(X_test)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T03:58:43.674821Z","iopub.execute_input":"2024-11-19T03:58:43.675422Z","iopub.status.idle":"2024-11-19T03:58:43.716771Z","shell.execute_reply.started":"2024-11-19T03:58:43.675385Z","shell.execute_reply":"2024-11-19T03:58:43.715707Z"}},"outputs":[],"execution_count":49},{"cell_type":"code","source":"knn = KNeighborsClassifier(n_neighbors=1)\nknn.fit(X_train_scaled, y_train)\nknn.score(X_train_scaled, y_train), knn.score(X_test_scaled, y_test)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T03:58:51.655343Z","iopub.execute_input":"2024-11-19T03:58:51.655740Z","iopub.status.idle":"2024-11-19T03:58:51.884351Z","shell.execute_reply.started":"2024-11-19T03:58:51.655706Z","shell.execute_reply":"2024-11-19T03:58:51.883151Z"}},"outputs":[{"execution_count":50,"output_type":"execute_result","data":{"text/plain":"(0.9832730560578662, 0.7811934900542495)"},"metadata":{}}],"execution_count":50},{"cell_type":"markdown","source":"**Wow!, Meningkat menjadi drastis**, artinya Feature engginering kita kali ini berhasil.","metadata":{}},{"cell_type":"markdown","source":"## 5 | Improve Model Melalui Model","metadata":{}},{"cell_type":"markdown","source":"## Parameter Tuning (Tuning n_neighbor tanpa scalling)","metadata":{}},{"cell_type":"code","source":"neighbor = range(1,51,2)\ntrain_score = []\ntest_score = []\n\nfor k in tqdm(neighbor, desc=\"Processing Tuning\"):\n    knn = KNeighborsClassifier(n_neighbors=k)\n    knn.fit(X_train, y_train)\n    \n    train_score.append(knn.score(X_train, y_train))\n    test_score.append(knn.score(X_test, y_test))\n    \nplt.plot(neighbor,train_score, label='train')\nplt.plot(neighbor,test_score, label='test')\nplt.legend();\n\nprint(f\"Max test score; {np.max(test_score)}\")\nprint(f\"n_neighbor; {neighbor[np.argmax(test_score)]}\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T04:04:17.912348Z","iopub.execute_input":"2024-11-19T04:04:17.912767Z","iopub.status.idle":"2024-11-19T04:04:24.819457Z","shell.execute_reply.started":"2024-11-19T04:04:17.912728Z","shell.execute_reply":"2024-11-19T04:04:24.818364Z"}},"outputs":[{"name":"stdout","text":"Max test score; 0.6184448462929476\nn_neighbor; 1\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"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GQaDASaTCXq93qevfcULX6PsbAtWPZCNqan+m7ZERER9h8ViQUlJCdLS0nq87T1JurqX3f38HtAtIwCQ2Da9l4NYiYiI5MEw4hrEyum9REREshjwYSSB03uJiIhkxTDiWviM03uJiIhkMeDDSFLb9F4uCU9ERCSPAR9GEjiAlYiISFYDPoy4ZtOca25Fi+3SK9oRERGRbw34MKIPUSFMI21QxK4aIiKiwBvwYUQQBA5iJSIiktGADyPAedN72TJCREQUcAwjAJK4ey8REfUTV111FR599FGfvd4999yD2bNn++z1eoJhBJxRQ0REJCeGEQAJkeymISIa8EQRsDXJc3Rzz9p77rkHGzduxCuvvAJBECAIAk6ePImDBw/i2muvRXh4OIxGI+666y7U1dW5n7d69WqMHz8eISEhiImJQU5ODpqamvDMM8/g73//Oz755BP3623YsMFPN7hzqoC/Yx+UxP1piIiotRl4PlGe9/51BaAJu+Rlr7zyCo4ePYpx48bhueeeAwCo1WpMmzYN8+fPx5/+9Ce0tLTgiSeewG233Yavv/4alZWVuP322/HCCy/gxhtvRENDA/73v/9BFEU89thjOHz4MMxmM/72t78BAKKjA7+DPcMIPPenEUURgiDIXBEREdHFDAYDNBoNQkNDER8fDwD47W9/i0mTJuH55593X/fOO+8gOTkZR48eRWNjI+x2O2666SYMGTIEADB+/Hj3tSEhIbBare7XkwPDCNrHjDTbHDC32GEIVctcERERBZw6VGqhkOu9e2jfvn345ptvEB4eftFjx48fxzXXXIOZM2di/PjxyM3NxTXXXINbbrkFUVFRvanYpxhGAIRolIgO0+Bskw0VphaGESKigUgQutVV0tc0NjZi1qxZ+MMf/nDRYwkJCVAqlVi/fj22bNmCL7/8Eq+++iqeeuopbN++HWlpaTJUfDEOYG1zflcNERFRX6XRaOBwtG9fMnnyZBw6dAipqalIT0/3OMLCpHAlCAJmzJiBZ599Fnv27IFGo8HatWs7fD05MIy0cU/v5SBWIiLqw1JTU7F9+3acPHkSdXV1WLBgAc6ePYvbb78dO3fuxPHjx/Hf//4X8+bNg8PhwPbt2/H8889j165dKC0txZo1a1BbW4vRo0e7X2///v04cuQI6urq0NraGvCfiWGkTVLb9N5KtowQEVEf9thj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/jNUKhWMRiPvfQBERkZixIgRKC4u9uvf96AKIxqNBpmZmSgoKHCfczqdKCgoQHZ2toyVDSxpaWmIj4/3+O9gNpuxfft2/nfoBVEU8dBDD2Ht2rX4+uuvkZaW5vF4ZmYm1Gq1x30/cuQISktLed99zOl0wmq18p770cyZM3HgwAHs3bvXfUyZMgV33nmn+2vee/9rbGzE8ePHkZCQ4N+/770a/toHffDBB6JWqxVXrFghfvfdd+L9998vRkZGilVVVXKXFlQaGhrEPXv2iHv27BEBiEuXLhX37Nkjnjp1ShRFUfz9738vRkZGip988om4f/9+8YYbbhDT0tLElpYWmSvvvx588EHRYDCIGzZsECsrK91Hc3Oz+5oHHnhATElJEb/++mtx165dYnZ2tpidnS1j1f3fk08+KW7cuFEsKSkR9+/fLz755JOiIAjil19+KYoi73kgnT+bRhR57/3h//7v/8QNGzaIJSUl4ubNm8WcnBwxNjZWrKmpEUXRf/c86MKIKIriq6++KqakpIgajUacNm2auG3bNrlLCjrffPONCOCiY+7cuaIoStN7n376adFoNIparVacOXOmeOTIEXmL7uc6ut8AxL/97W/ua1paWsRf/OIXYlRUlBgaGireeOONYmVlpXxFB4F7771XHDJkiKjRaMS4uDhx5syZ7iAiirzngXRhGOG99705c+aICQkJokajEZOSksQ5c+aIxcXF7sf9dc8FURTF3rWtEBEREfVcUI0ZISIiov6HYYSIiIhkxTBCREREsmIYISIiIlkxjBAREZGsGEaIiIhIVgwjREREJCuGESIiIpIVwwgRERHJimGEiIiIZMUwQkRERLL6/zqsQccm7luIAAAAAElFTkSuQmCC"},"metadata":{}}],"execution_count":51},{"cell_type":"markdown","source":"## Parameter Tuning (Tuning n_neighbor dengan scalling)","metadata":{}},{"cell_type":"code","source":"from tqdm import tqdm\n\nneighbor = range(1,51,2)\ntrain_score = []\ntest_score = []\n\nfor k in tqdm(neighbor, desc=\"Processing Tuning\"):\n    knn = KNeighborsClassifier(n_neighbors=k)\n    knn.fit(X_train_scaled, y_train)\n    \n    train_score.append(knn.score(X_train_scaled, y_train))\n    test_score.append(knn.score(X_test_scaled, y_test))\n    \nplt.plot(neighbor,train_score, label='train')\nplt.plot(neighbor,test_score, label='test')\nplt.legend();\n\nprint(f\"Max test score; {np.max(test_score)}\")\nprint(f\"n_neighbor; {neighbor[np.argmax(test_score)]}\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T04:07:04.727295Z","iopub.execute_input":"2024-11-19T04:07:04.727734Z","iopub.status.idle":"2024-11-19T04:07:11.278028Z","shell.execute_reply.started":"2024-11-19T04:07:04.727701Z","shell.execute_reply":"2024-11-19T04:07:11.276781Z"}},"outputs":[{"name":"stderr","text":"Processing Tuning: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 25/25 [00:06<00:00,  3.99it/s]\n","output_type":"stream"},{"name":"stdout","text":"Max test score; 0.7956600361663653\nn_neighbor; 7\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":52},{"cell_type":"markdown","source":"## Tuning n_neighbor dengan weight by distance","metadata":{}},{"cell_type":"code","source":"neighbor = range(1,51,2)\ntrain_score = []\ntest_score = []\n\nfor k in tqdm(neighbor, desc=\"Processing Tuning\"):\n    knn = KNeighborsClassifier(n_neighbors=k, weights=\"distance\")\n    knn.fit(X_train_scaled, y_train)\n    \n    train_score.append(knn.score(X_train_scaled, y_train))\n    test_score.append(knn.score(X_test_scaled, y_test))\n    \nplt.plot(neighbor,train_score, label='train')\nplt.plot(neighbor,test_score, label='test')\nplt.legend();\n\nprint(f\"Max test score; {np.max(test_score)}\")\nprint(f\"n_neighbor; {neighbor[np.argmax(test_score)]}\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T04:08:12.700579Z","iopub.execute_input":"2024-11-19T04:08:12.701051Z","iopub.status.idle":"2024-11-19T04:08:17.327569Z","shell.execute_reply.started":"2024-11-19T04:08:12.701015Z","shell.execute_reply":"2024-11-19T04:08:17.326443Z"}},"outputs":[{"name":"stdout","text":"Max test score; 0.7956600361663653\nn_neighbor; 5\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"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"},"metadata":{}}],"execution_count":53},{"cell_type":"markdown","source":"## Menggunakan Manhattan distance\n\n- p=1 -> manhattan\n- **p=2 -> euclidean** default\n- p=n -> minkowski","metadata":{}},{"cell_type":"code","source":"neighbor = range(1,51,2)\ntrain_score = []\ntest_score = []\n\nfor k in tqdm(neighbor, desc=\"Processing Tuning\"):\n    knn = KNeighborsClassifier(n_neighbors=k, weights=\"distance\", p=1)\n    knn.fit(X_train_scaled, y_train)\n    \n    train_score.append(knn.score(X_train_scaled, y_train))\n    test_score.append(knn.score(X_test_scaled, y_test))\n    \nplt.plot(neighbor,train_score, label='train')\nplt.plot(neighbor,test_score, label='test')\nplt.legend();\n\nprint(f\"Max test score; {np.max(test_score)}\")\nprint(f\"n_neighbor; {neighbor[np.argmax(test_score)]}\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T04:09:30.185308Z","iopub.execute_input":"2024-11-19T04:09:30.185744Z","iopub.status.idle":"2024-11-19T04:10:05.539000Z","shell.execute_reply.started":"2024-11-19T04:09:30.185708Z","shell.execute_reply":"2024-11-19T04:10:05.537870Z"}},"outputs":[{"name":"stderr","text":"Processing Tuning: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 25/25 [00:35<00:00,  1.41s/it]","output_type":"stream"},{"name":"stdout","text":"Max test score; 0.8028933092224232\nn_neighbor; 7\n","output_type":"stream"},{"name":"stderr","text":"\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":54},{"cell_type":"markdown","source":"**Membaca grafik**\n\nPerbandingan pola grafik antara dengan scalling dan tidak scalling adalah:\n- Pada grafik tanpa scaling terlihat bahwa test dan train sama sama memiliki score yang turun\n- Pada grafik dengan scaling terlihat bahwa score train menurun dan test set meningkat. Hal ini wajar, karena memperlihatkan bahwa model kita terlihat makin pintar\n- ketika k = 1 baik train dan test sangat overfit (soal pretest sulit sekali dan hasil posttestny jadi jelek sekali), namun semakin tinggi nilai k terlihat bahwa soal pretest semakin mudah sehingga nilai posttest jadi semakin baik, mendekati tidak overfit. \n\nPerbandingan pola grafik antara dengan weight dan manhattan adalah:\n- Pada kedua grafik terlihat bahwa kedua score test semakin meningkat dan score train juga meningkat","metadata":{}},{"cell_type":"markdown","source":"## 6 | DATA LEAKAGE (kebocoran Data)","metadata":{}},{"cell_type":"code","source":"illustration.data_leakage","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T04:21:35.267511Z","iopub.execute_input":"2024-11-19T04:21:35.267953Z","iopub.status.idle":"2024-11-19T04:21:35.277118Z","shell.execute_reply.started":"2024-11-19T04:21:35.267919Z","shell.execute_reply":"2024-11-19T04:21:35.276078Z"}},"outputs":[{"execution_count":55,"output_type":"execute_result","data":{"image/png":"","text/plain":"<IPython.core.display.Image object>"},"metadata":{"image/png":{"width":800}}}],"execution_count":55},{"cell_type":"markdown","source":"Ketika kita melakukan MinMaxScaller kita akan split data yaitu train dan test. Ada dua tahap penting, yaitu:\n- `fit` untuk mencari Min-Max\n- `transform` mengubah Xold - Xnew\n\nDitekankan juga bahwa data test jangan di FIT, karena kita tidak pernah tau Min-Max untuk masa depan.\n\n**Data Leakage terjadi ketika melakukan fit pada data test atau kebocoran data test ketika di lakukan fit (training)**\n\nPenyebab lain bisa terjadi data leakage adalah\n- imputation\n  - melakukan impute menggunakan informasi dari seluruh data, harusnya hanya data train saja\n  - `solusi`: fit_transform pada train, transform pada test\n- scalling\n  - melakukan impute menggunakan informasi dari seluruh data, harusnya hanya data train saja\n  - `solusi`: fit_transform pada train, transform pada test\n- k-fold pada train test split\n  - k-fold menyebabkan kita menyentuh data test yang seharusnya tersembunyi\n  - ibaratnya seperti kita boleh retake ujian (remedial), ya lama-lama kita jadi tahu soal ujiannya\n  - `solusi`: train-val-test split\n  \n**Tips menghindari data leakake**\n\n- split data sebelum meakukan imputation, scalling\n- jangan pernah fit apapun selain data train, lalu simpan informasi hasil fit tersebut\n- gunakan train-val-test split","metadata":{}},{"cell_type":"markdown","source":"## **Train-Val-Test Split**\n\nBedasarkan kosnep-konsep sebelumnya, maka dapat didesain splitting yang lebih baik menjadi:\n- train set: untuk training\n- validation set: untuk k-fold dan tuning model\n- test set: untuk scoring\n\nIbaratnya seperti\n- kerjakan PR: belajar materi\n- Quiz yang boleh retake: kita akan retake terus menerus sampai dapat strategi terbaik untuk ujian\n- ujian: gunakan strategi terbaik, score ini lah yang dijadikan acuan performa","metadata":{}},{"cell_type":"code","source":"illustration.train_val_test","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T04:24:51.968895Z","iopub.execute_input":"2024-11-19T04:24:51.969339Z","iopub.status.idle":"2024-11-19T04:24:51.977512Z","shell.execute_reply.started":"2024-11-19T04:24:51.969304Z","shell.execute_reply":"2024-11-19T04:24:51.976339Z"}},"outputs":[{"execution_count":56,"output_type":"execute_result","data":{"image/png":"","text/plain":"<IPython.core.display.Image object>"},"metadata":{"image/png":{"width":900}}}],"execution_count":56},{"cell_type":"markdown","source":"**penjelasan gambar:**\n\n- dataset di split menjadi train dan test\n- split data train menjadi beberapa bagian (misal 4 bagian) -> kita bagi soal Quiz menjadi 4 bagian\n- buat 4 skenario berdasarkan 4 bagian tadi\n- setiap bagian Quiz pada setiap skenario diperbolahkan untuk retake sampai mendapatkan hasil yang terbaik dan dirata-ratakan\n- dengan demikin soal test akan selalu terjaga\n\n**kendala**: \n- menyimpan informasi rata-rata untuk setiap fit dan retake pada setiap skenario. Karena test butuh informasi data rata-rata tersebut ketika melakukan impute. Ini sangat merepotkan.\n\n**solusi**:\n- harus menyiapkan workflow yang rapi","metadata":{}},{"cell_type":"markdown","source":"## **Preprocessor**","metadata":{}},{"cell_type":"markdown","source":"- Pipeline sangat membantu kita mengurangi data leakeges. Pipeline bisa berupa **kategori** atau **numerik**.\n- Cara kerja pipeline ini mirip seperti menggunakan *function* pada python\n- Pipeline seperti pipa dimana semua setup ada didalamnya satu arah, sehingga ketika ada inputan dataset, ketika melewati pipa sudah menjadi output berupa dataset yang sudah di *preprocessing*\n- Kita siapkan/setup banyak pipeline, misal pipeline khuhus preparasi data katagirk atau numerik, pipeline khusus fit, dll\n- Dengen menggunakan pipeline di sklearn, sebenarnya kita tidak perlu pandas","metadata":{}},{"cell_type":"code","source":"from sklearn.pipeline import Pipeline\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import MinMaxScaler, OneHotEncoder, OrdinalEncoder","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T04:45:41.627792Z","iopub.execute_input":"2024-11-19T04:45:41.628176Z","iopub.status.idle":"2024-11-19T04:45:41.633401Z","shell.execute_reply.started":"2024-11-19T04:45:41.628144Z","shell.execute_reply":"2024-11-19T04:45:41.632311Z"}},"outputs":[],"execution_count":70},{"cell_type":"markdown","source":"**PIPELINE KHUSUS DATASET NUMERIK**","metadata":{}},{"cell_type":"code","source":"numerical_pipeline = Pipeline([\n    (\"imputer\", SimpleImputer(strategy=\"mean\")),\n    (\"scaler\", MinMaxScaler()),\n])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T04:28:08.417102Z","iopub.execute_input":"2024-11-19T04:28:08.417528Z","iopub.status.idle":"2024-11-19T04:28:08.422969Z","shell.execute_reply.started":"2024-11-19T04:28:08.417492Z","shell.execute_reply":"2024-11-19T04:28:08.421772Z"}},"outputs":[],"execution_count":58},{"cell_type":"markdown","source":"**PIPELINE KHUSUS DATASET CATEGORIK**","metadata":{}},{"cell_type":"code","source":"categorical_pipeline = Pipeline([\n    (\"imputer\", SimpleImputer(strategy=\"most_frequent\")),\n    (\"ordinal_encoder\", OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1)),\n])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T04:45:44.181134Z","iopub.execute_input":"2024-11-19T04:45:44.181557Z","iopub.status.idle":"2024-11-19T04:45:44.187101Z","shell.execute_reply.started":"2024-11-19T04:45:44.181523Z","shell.execute_reply":"2024-11-19T04:45:44.185660Z"}},"outputs":[],"execution_count":71},{"cell_type":"markdown","source":"## **COLUMN TRANSFORM**\nSejauh ini kita baru menyiapkan 2 pipeline (categorical dan numerical). Misalkan kita mempunyai dataset yang kolomnya ada bertipe numerik dan kategorik. Kita bisa arahkan setiap kolom berbeda tersebut sesuai dengan pipelinenya. Bahkan kita juga bisa custom pipeline kita lebih dari 2. \n\nUntuk lebih advance lagi, kita bisa gabungkan lebih dari 2 pipeline menjadi satu pipeline baru, agar supaya lebih ringkas. Nah, hal ini dikenel dengan istilah **`COLUMN TRANSFORM`**\n\n**Tugas** dari column transform maka memilah milah mana yang kolomnya masuk ke pipeline numerik datau ke pipeline kategorik kemudian diencode, digabungin kembali dan lalu keluar\n\nKeseluruhan proses diatas dikenal dengan nama **`preprocessor`**, tahap selanjutnya kita akan membuat pipeline untuk algoritma dan fittingnya","metadata":{}},{"cell_type":"code","source":"from sklearn.compose import ColumnTransformer","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T04:31:21.816787Z","iopub.execute_input":"2024-11-19T04:31:21.817185Z","iopub.status.idle":"2024-11-19T04:31:21.822894Z","shell.execute_reply.started":"2024-11-19T04:31:21.817153Z","shell.execute_reply":"2024-11-19T04:31:21.821691Z"}},"outputs":[],"execution_count":60},{"cell_type":"code","source":"X_train.head() #--> cek kolom data train","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T04:31:46.774144Z","iopub.execute_input":"2024-11-19T04:31:46.774542Z","iopub.status.idle":"2024-11-19T04:31:46.798352Z","shell.execute_reply.started":"2024-11-19T04:31:46.774510Z","shell.execute_reply":"2024-11-19T04:31:46.797219Z"}},"outputs":[{"execution_count":61,"output_type":"execute_result","data":{"text/plain":"           MW    LogP  NumHDonors  NumHAcceptors  SubFP1  SubFP2  SubFP3  \\\n2370  689.728  8.1987         0.0            6.0       0       1       0   \n1103  340.338  3.7109         2.0            4.0       0       0       0   \n1150  403.253  4.9637         2.0            4.0       0       0       0   \n2545  421.486  1.6972         0.0            8.0       0       0       0   \n1217  371.440  3.6259         2.0            3.0       0       1       0   \n\n      SubFP4  SubFP5  SubFP6  ...  SubFP298  SubFP299  SubFP300  SubFP301  \\\n2370       0       0       0  ...         0         0         1         1   \n1103       0       0       0  ...         0         0         1         1   \n1150       0       1       0  ...         0         0         1         1   \n2545       0       0       0  ...         0         0         1         1   \n1217       1       0       0  ...         0         0         1         1   \n\n      SubFP302  SubFP303  SubFP304  SubFP305  SubFP306  SubFP307  \n2370         1         0         0         0         0         1  \n1103         0         0         0         0         0         1  \n1150         1         1         0         0         0         1  \n2545         1         0         0         0         0         1  \n1217         1         0         0         0         0         1  \n\n[5 rows x 311 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>MW</th>\n      <th>LogP</th>\n      <th>NumHDonors</th>\n      <th>NumHAcceptors</th>\n      <th>SubFP1</th>\n      <th>SubFP2</th>\n      <th>SubFP3</th>\n      <th>SubFP4</th>\n      <th>SubFP5</th>\n      <th>SubFP6</th>\n      <th>...</th>\n      <th>SubFP298</th>\n      <th>SubFP299</th>\n      <th>SubFP300</th>\n      <th>SubFP301</th>\n      <th>SubFP302</th>\n      <th>SubFP303</th>\n      <th>SubFP304</th>\n      <th>SubFP305</th>\n      <th>SubFP306</th>\n      <th>SubFP307</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2370</th>\n      <td>689.728</td>\n      <td>8.1987</td>\n      <td>0.0</td>\n      <td>6.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1103</th>\n      <td>340.338</td>\n      <td>3.7109</td>\n      <td>2.0</td>\n      <td>4.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1150</th>\n      <td>403.253</td>\n      <td>4.9637</td>\n      <td>2.0</td>\n      <td>4.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2545</th>\n      <td>421.486</td>\n      <td>1.6972</td>\n      <td>0.0</td>\n      <td>8.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1217</th>\n      <td>371.440</td>\n      <td>3.6259</td>\n      <td>2.0</td>\n      <td>3.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 311 columns</p>\n</div>"},"metadata":{}}],"execution_count":61},{"cell_type":"markdown","source":"**Karena kolom yang digunakan sangat banyak, maka kita perlu modifikasi kode filtering kita**","metadata":{}},{"cell_type":"code","source":"numeric = [\"MW\",\"LogP\",\"NumHDonors\",\"NumHAcceptors\"]\ncategoric = [col for col in X_train.columns if col not in numeric]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T04:45:53.954970Z","iopub.execute_input":"2024-11-19T04:45:53.956002Z","iopub.status.idle":"2024-11-19T04:45:53.962104Z","shell.execute_reply.started":"2024-11-19T04:45:53.955961Z","shell.execute_reply":"2024-11-19T04:45:53.960986Z"}},"outputs":[],"execution_count":72},{"cell_type":"code","source":"preprocessor = ColumnTransformer([\n    (\"numeric\", numerical_pipeline, numeric),\n    (\"categoric\", categorical_pipeline, categoric)\n])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T04:45:57.965993Z","iopub.execute_input":"2024-11-19T04:45:57.966425Z","iopub.status.idle":"2024-11-19T04:45:57.972069Z","shell.execute_reply.started":"2024-11-19T04:45:57.966388Z","shell.execute_reply":"2024-11-19T04:45:57.970712Z"}},"outputs":[],"execution_count":73},{"cell_type":"markdown","source":"## **Pipepline (PIPELINE UTAMA)**\n\nSetelah sebelumnya kita sudah berhasil melakukan tahap preprocessor dengan menggunakan 2 pipeline (pipeline kategorik dan numerik) hingga mendapatkan output yaitu hanya dataset train sesuai pipelinenya masing masing.Hal ini bertujuan menghindari data leakage untuk dataset test.  \n\nTahap berikutnya adalah membuat pipeline lain untuk prediksinya. kita akan memnerikan variabel itu secara keseluruhan dengan nama **`pipeline`** ","metadata":{}},{"cell_type":"code","source":"from sklearn.neighbors import KNeighborsClassifier\npipeline = Pipeline([\n    (\"prep\", preprocessor),\n    (\"algo\", KNeighborsClassifier())\n])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T04:46:10.068577Z","iopub.execute_input":"2024-11-19T04:46:10.069043Z","iopub.status.idle":"2024-11-19T04:46:10.074517Z","shell.execute_reply.started":"2024-11-19T04:46:10.069004Z","shell.execute_reply":"2024-11-19T04:46:10.073329Z"}},"outputs":[],"execution_count":74},{"cell_type":"code","source":"pipeline.fit(X_train, y_train)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T04:46:14.424984Z","iopub.execute_input":"2024-11-19T04:46:14.425408Z","iopub.status.idle":"2024-11-19T04:46:14.801394Z","shell.execute_reply.started":"2024-11-19T04:46:14.425371Z","shell.execute_reply":"2024-11-19T04:46:14.799976Z"}},"outputs":[{"execution_count":75,"output_type":"execute_result","data":{"text/plain":"Pipeline(steps=[('prep',\n                 ColumnTransformer(transformers=[('numeric',\n                                                  Pipeline(steps=[('imputer',\n                                                                   SimpleImputer()),\n                                                                  ('scaler',\n                                                                   MinMaxScaler())]),\n                                                  ['MW', 'LogP', 'NumHDonors',\n                                                   'NumHAcceptors']),\n                                                 ('categoric',\n                                                  Pipeline(steps=[('imputer',\n                                                                   SimpleImputer(strategy='most_frequent')),\n                                                                  ('ordinal_encoder',\n                                                                   OrdinalEncoder(handle_unknown='use_encoded_value',\n                                                                                  unknown_value=-1))]),\n                                                  ['SubFP1', 'SubFP2', 'SubFP3',\n                                                   'SubFP4', 'SubFP5', 'SubFP6',\n                                                   'SubFP7', 'SubFP8', 'SubFP9',\n                                                   'SubFP10', 'SubFP11',\n                                                   'SubFP12', 'SubFP13',\n                                                   'SubFP14', 'SubFP15',\n                                                   'SubFP16', 'SubFP17',\n                                                   'SubFP18', 'SubFP19',\n                                                   'SubFP20', 'SubFP21',\n                                                   'SubFP22', 'SubFP23',\n                                                   'SubFP24', 'SubFP25',\n                                                   'SubFP26', 'SubFP27',\n                                                   'SubFP28', 'SubFP29',\n                                                   'SubFP30', ...])])),\n                ('algo', KNeighborsClassifier())])","text/html":"<style>#sk-container-id-4 {color: black;background-color: white;}#sk-container-id-4 pre{padding: 0;}#sk-container-id-4 div.sk-toggleable {background-color: white;}#sk-container-id-4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-4 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-4 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-4 div.sk-item {position: relative;z-index: 1;}#sk-container-id-4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-4 div.sk-item::before, #sk-container-id-4 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-4 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-4 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-4 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-4 div.sk-label-container {text-align: center;}#sk-container-id-4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-4 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-4\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>Pipeline(steps=[(&#x27;prep&#x27;,\n                 ColumnTransformer(transformers=[(&#x27;numeric&#x27;,\n                                                  Pipeline(steps=[(&#x27;imputer&#x27;,\n                                                                   SimpleImputer()),\n                                                                  (&#x27;scaler&#x27;,\n                                                                   MinMaxScaler())]),\n                                                  [&#x27;MW&#x27;, &#x27;LogP&#x27;, &#x27;NumHDonors&#x27;,\n                                                   &#x27;NumHAcceptors&#x27;]),\n                                                 (&#x27;categoric&#x27;,\n                                                  Pipeline(steps=[(&#x27;imputer&#x27;,\n                                                                   SimpleImputer(strategy=&#x27;most_frequent&#x27;)),\n                                                                  (&#x27;ordinal_encoder&#x27;,\n                                                                   OrdinalEncoder(handle_unknown=&#x27;use_encoded_value&#x27;,\n                                                                                  unknown_value=-1))]),\n                                                  [&#x27;SubFP1&#x27;, &#x27;SubFP2&#x27;, &#x27;SubFP3&#x27;,\n                                                   &#x27;SubFP4&#x27;, &#x27;SubFP5&#x27;, &#x27;SubFP6&#x27;,\n                                                   &#x27;SubFP7&#x27;, &#x27;SubFP8&#x27;, &#x27;SubFP9&#x27;,\n                                                   &#x27;SubFP10&#x27;, &#x27;SubFP11&#x27;,\n                                                   &#x27;SubFP12&#x27;, &#x27;SubFP13&#x27;,\n                                                   &#x27;SubFP14&#x27;, &#x27;SubFP15&#x27;,\n                                                   &#x27;SubFP16&#x27;, &#x27;SubFP17&#x27;,\n                                                   &#x27;SubFP18&#x27;, &#x27;SubFP19&#x27;,\n                                                   &#x27;SubFP20&#x27;, &#x27;SubFP21&#x27;,\n                                                   &#x27;SubFP22&#x27;, &#x27;SubFP23&#x27;,\n                                                   &#x27;SubFP24&#x27;, &#x27;SubFP25&#x27;,\n                                                   &#x27;SubFP26&#x27;, &#x27;SubFP27&#x27;,\n                                                   &#x27;SubFP28&#x27;, &#x27;SubFP29&#x27;,\n                                                   &#x27;SubFP30&#x27;, ...])])),\n                (&#x27;algo&#x27;, KNeighborsClassifier())])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-12\" type=\"checkbox\" ><label for=\"sk-estimator-id-12\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">Pipeline</label><div class=\"sk-toggleable__content\"><pre>Pipeline(steps=[(&#x27;prep&#x27;,\n                 ColumnTransformer(transformers=[(&#x27;numeric&#x27;,\n                                                  Pipeline(steps=[(&#x27;imputer&#x27;,\n                                                                   SimpleImputer()),\n                                                                  (&#x27;scaler&#x27;,\n                                                                   MinMaxScaler())]),\n                                                  [&#x27;MW&#x27;, &#x27;LogP&#x27;, &#x27;NumHDonors&#x27;,\n                                                   &#x27;NumHAcceptors&#x27;]),\n                                                 (&#x27;categoric&#x27;,\n                                                  Pipeline(steps=[(&#x27;imputer&#x27;,\n                                                                   SimpleImputer(strategy=&#x27;most_frequent&#x27;)),\n                                                                  (&#x27;ordinal_encoder&#x27;,\n                                                                   OrdinalEncoder(handle_unknown=&#x27;use_encoded_value&#x27;,\n                                                                                  unknown_value=-1))]),\n                                                  [&#x27;SubFP1&#x27;, &#x27;SubFP2&#x27;, &#x27;SubFP3&#x27;,\n                                                   &#x27;SubFP4&#x27;, &#x27;SubFP5&#x27;, &#x27;SubFP6&#x27;,\n                                                   &#x27;SubFP7&#x27;, &#x27;SubFP8&#x27;, &#x27;SubFP9&#x27;,\n                                                   &#x27;SubFP10&#x27;, &#x27;SubFP11&#x27;,\n                                                   &#x27;SubFP12&#x27;, &#x27;SubFP13&#x27;,\n                                                   &#x27;SubFP14&#x27;, &#x27;SubFP15&#x27;,\n                                                   &#x27;SubFP16&#x27;, &#x27;SubFP17&#x27;,\n                                                   &#x27;SubFP18&#x27;, &#x27;SubFP19&#x27;,\n                                                   &#x27;SubFP20&#x27;, &#x27;SubFP21&#x27;,\n                                                   &#x27;SubFP22&#x27;, &#x27;SubFP23&#x27;,\n                                                   &#x27;SubFP24&#x27;, &#x27;SubFP25&#x27;,\n                                                   &#x27;SubFP26&#x27;, &#x27;SubFP27&#x27;,\n                                                   &#x27;SubFP28&#x27;, &#x27;SubFP29&#x27;,\n                                                   &#x27;SubFP30&#x27;, ...])])),\n                (&#x27;algo&#x27;, KNeighborsClassifier())])</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-13\" type=\"checkbox\" ><label for=\"sk-estimator-id-13\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">prep: ColumnTransformer</label><div class=\"sk-toggleable__content\"><pre>ColumnTransformer(transformers=[(&#x27;numeric&#x27;,\n                                 Pipeline(steps=[(&#x27;imputer&#x27;, SimpleImputer()),\n                                                 (&#x27;scaler&#x27;, MinMaxScaler())]),\n                                 [&#x27;MW&#x27;, &#x27;LogP&#x27;, &#x27;NumHDonors&#x27;, &#x27;NumHAcceptors&#x27;]),\n                                (&#x27;categoric&#x27;,\n                                 Pipeline(steps=[(&#x27;imputer&#x27;,\n                                                  SimpleImputer(strategy=&#x27;most_frequent&#x27;)),\n                                                 (&#x27;ordinal_encoder&#x27;,\n                                                  OrdinalEncoder(handle_unknown=&#x27;use_encoded_value&#x27;,\n                                                                 unknown_value=-1))]),\n                                 [&#x27;SubFP1&#x27;, &#x27;SubFP2&#x27;, &#x27;SubFP3&#x27;, &#x27;SubFP4&#x27;,\n                                  &#x27;SubFP5&#x27;, &#x27;SubFP6&#x27;, &#x27;SubFP7&#x27;, &#x27;SubFP8&#x27;,\n                                  &#x27;SubFP9&#x27;, &#x27;SubFP10&#x27;, &#x27;SubFP11&#x27;, &#x27;SubFP12&#x27;,\n                                  &#x27;SubFP13&#x27;, &#x27;SubFP14&#x27;, &#x27;SubFP15&#x27;, &#x27;SubFP16&#x27;,\n                                  &#x27;SubFP17&#x27;, &#x27;SubFP18&#x27;, &#x27;SubFP19&#x27;, &#x27;SubFP20&#x27;,\n                                  &#x27;SubFP21&#x27;, &#x27;SubFP22&#x27;, &#x27;SubFP23&#x27;, &#x27;SubFP24&#x27;,\n                                  &#x27;SubFP25&#x27;, &#x27;SubFP26&#x27;, &#x27;SubFP27&#x27;, &#x27;SubFP28&#x27;,\n                                  &#x27;SubFP29&#x27;, &#x27;SubFP30&#x27;, ...])])</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-14\" type=\"checkbox\" ><label for=\"sk-estimator-id-14\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">numeric</label><div class=\"sk-toggleable__content\"><pre>[&#x27;MW&#x27;, &#x27;LogP&#x27;, &#x27;NumHDonors&#x27;, &#x27;NumHAcceptors&#x27;]</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-15\" type=\"checkbox\" ><label for=\"sk-estimator-id-15\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SimpleImputer</label><div class=\"sk-toggleable__content\"><pre>SimpleImputer()</pre></div></div></div><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-16\" type=\"checkbox\" ><label for=\"sk-estimator-id-16\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">MinMaxScaler</label><div class=\"sk-toggleable__content\"><pre>MinMaxScaler()</pre></div></div></div></div></div></div></div></div><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-17\" type=\"checkbox\" ><label for=\"sk-estimator-id-17\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">categoric</label><div class=\"sk-toggleable__content\"><pre>[&#x27;SubFP1&#x27;, &#x27;SubFP2&#x27;, &#x27;SubFP3&#x27;, &#x27;SubFP4&#x27;, &#x27;SubFP5&#x27;, &#x27;SubFP6&#x27;, &#x27;SubFP7&#x27;, &#x27;SubFP8&#x27;, &#x27;SubFP9&#x27;, &#x27;SubFP10&#x27;, &#x27;SubFP11&#x27;, &#x27;SubFP12&#x27;, &#x27;SubFP13&#x27;, &#x27;SubFP14&#x27;, &#x27;SubFP15&#x27;, &#x27;SubFP16&#x27;, &#x27;SubFP17&#x27;, &#x27;SubFP18&#x27;, &#x27;SubFP19&#x27;, &#x27;SubFP20&#x27;, &#x27;SubFP21&#x27;, &#x27;SubFP22&#x27;, &#x27;SubFP23&#x27;, &#x27;SubFP24&#x27;, &#x27;SubFP25&#x27;, &#x27;SubFP26&#x27;, &#x27;SubFP27&#x27;, &#x27;SubFP28&#x27;, &#x27;SubFP29&#x27;, &#x27;SubFP30&#x27;, &#x27;SubFP31&#x27;, &#x27;SubFP32&#x27;, &#x27;SubFP33&#x27;, &#x27;SubFP34&#x27;, &#x27;SubFP35&#x27;, &#x27;SubFP36&#x27;, &#x27;SubFP37&#x27;, &#x27;SubFP38&#x27;, &#x27;SubFP39&#x27;, &#x27;SubFP40&#x27;, &#x27;SubFP41&#x27;, &#x27;SubFP42&#x27;, &#x27;SubFP43&#x27;, &#x27;SubFP44&#x27;, &#x27;SubFP45&#x27;, &#x27;SubFP46&#x27;, &#x27;SubFP47&#x27;, &#x27;SubFP48&#x27;, &#x27;SubFP49&#x27;, &#x27;SubFP50&#x27;, &#x27;SubFP51&#x27;, &#x27;SubFP52&#x27;, &#x27;SubFP53&#x27;, &#x27;SubFP54&#x27;, &#x27;SubFP55&#x27;, &#x27;SubFP56&#x27;, &#x27;SubFP57&#x27;, &#x27;SubFP58&#x27;, &#x27;SubFP59&#x27;, &#x27;SubFP60&#x27;, &#x27;SubFP61&#x27;, &#x27;SubFP62&#x27;, &#x27;SubFP63&#x27;, &#x27;SubFP64&#x27;, &#x27;SubFP65&#x27;, &#x27;SubFP66&#x27;, &#x27;SubFP67&#x27;, &#x27;SubFP68&#x27;, &#x27;SubFP69&#x27;, &#x27;SubFP70&#x27;, &#x27;SubFP71&#x27;, &#x27;SubFP72&#x27;, &#x27;SubFP73&#x27;, &#x27;SubFP74&#x27;, &#x27;SubFP75&#x27;, &#x27;SubFP76&#x27;, &#x27;SubFP77&#x27;, &#x27;SubFP78&#x27;, &#x27;SubFP79&#x27;, &#x27;SubFP80&#x27;, &#x27;SubFP81&#x27;, &#x27;SubFP82&#x27;, &#x27;SubFP83&#x27;, &#x27;SubFP84&#x27;, &#x27;SubFP85&#x27;, &#x27;SubFP86&#x27;, &#x27;SubFP87&#x27;, &#x27;SubFP88&#x27;, &#x27;SubFP89&#x27;, &#x27;SubFP90&#x27;, &#x27;SubFP91&#x27;, &#x27;SubFP92&#x27;, &#x27;SubFP93&#x27;, &#x27;SubFP94&#x27;, &#x27;SubFP95&#x27;, &#x27;SubFP96&#x27;, &#x27;SubFP97&#x27;, &#x27;SubFP98&#x27;, &#x27;SubFP99&#x27;, &#x27;SubFP100&#x27;, &#x27;SubFP101&#x27;, &#x27;SubFP102&#x27;, &#x27;SubFP103&#x27;, &#x27;SubFP104&#x27;, &#x27;SubFP105&#x27;, &#x27;SubFP106&#x27;, &#x27;SubFP107&#x27;, &#x27;SubFP108&#x27;, &#x27;SubFP109&#x27;, &#x27;SubFP110&#x27;, &#x27;SubFP111&#x27;, &#x27;SubFP112&#x27;, &#x27;SubFP113&#x27;, &#x27;SubFP114&#x27;, &#x27;SubFP115&#x27;, &#x27;SubFP116&#x27;, &#x27;SubFP117&#x27;, &#x27;SubFP118&#x27;, &#x27;SubFP119&#x27;, &#x27;SubFP120&#x27;, &#x27;SubFP121&#x27;, &#x27;SubFP122&#x27;, &#x27;SubFP123&#x27;, &#x27;SubFP124&#x27;, &#x27;SubFP125&#x27;, &#x27;SubFP126&#x27;, &#x27;SubFP127&#x27;, &#x27;SubFP128&#x27;, &#x27;SubFP129&#x27;, &#x27;SubFP130&#x27;, &#x27;SubFP131&#x27;, &#x27;SubFP132&#x27;, &#x27;SubFP133&#x27;, &#x27;SubFP134&#x27;, &#x27;SubFP135&#x27;, &#x27;SubFP136&#x27;, &#x27;SubFP137&#x27;, &#x27;SubFP138&#x27;, &#x27;SubFP139&#x27;, &#x27;SubFP140&#x27;, &#x27;SubFP141&#x27;, &#x27;SubFP142&#x27;, &#x27;SubFP143&#x27;, &#x27;SubFP144&#x27;, &#x27;SubFP145&#x27;, &#x27;SubFP146&#x27;, &#x27;SubFP147&#x27;, &#x27;SubFP148&#x27;, &#x27;SubFP149&#x27;, &#x27;SubFP150&#x27;, &#x27;SubFP151&#x27;, &#x27;SubFP152&#x27;, &#x27;SubFP153&#x27;, &#x27;SubFP154&#x27;, &#x27;SubFP155&#x27;, &#x27;SubFP156&#x27;, &#x27;SubFP157&#x27;, &#x27;SubFP158&#x27;, &#x27;SubFP159&#x27;, &#x27;SubFP160&#x27;, &#x27;SubFP161&#x27;, &#x27;SubFP162&#x27;, &#x27;SubFP163&#x27;, &#x27;SubFP164&#x27;, &#x27;SubFP165&#x27;, &#x27;SubFP166&#x27;, &#x27;SubFP167&#x27;, &#x27;SubFP168&#x27;, &#x27;SubFP169&#x27;, &#x27;SubFP170&#x27;, &#x27;SubFP171&#x27;, &#x27;SubFP172&#x27;, &#x27;SubFP173&#x27;, &#x27;SubFP174&#x27;, &#x27;SubFP175&#x27;, &#x27;SubFP176&#x27;, &#x27;SubFP177&#x27;, &#x27;SubFP178&#x27;, &#x27;SubFP179&#x27;, &#x27;SubFP180&#x27;, &#x27;SubFP181&#x27;, &#x27;SubFP182&#x27;, &#x27;SubFP183&#x27;, &#x27;SubFP184&#x27;, &#x27;SubFP185&#x27;, &#x27;SubFP186&#x27;, &#x27;SubFP187&#x27;, &#x27;SubFP188&#x27;, &#x27;SubFP189&#x27;, &#x27;SubFP190&#x27;, &#x27;SubFP191&#x27;, &#x27;SubFP192&#x27;, &#x27;SubFP193&#x27;, &#x27;SubFP194&#x27;, &#x27;SubFP195&#x27;, &#x27;SubFP196&#x27;, &#x27;SubFP197&#x27;, &#x27;SubFP198&#x27;, &#x27;SubFP199&#x27;, &#x27;SubFP200&#x27;, &#x27;SubFP201&#x27;, &#x27;SubFP202&#x27;, &#x27;SubFP203&#x27;, &#x27;SubFP204&#x27;, &#x27;SubFP205&#x27;, &#x27;SubFP206&#x27;, &#x27;SubFP207&#x27;, &#x27;SubFP208&#x27;, &#x27;SubFP209&#x27;, &#x27;SubFP210&#x27;, &#x27;SubFP211&#x27;, &#x27;SubFP212&#x27;, &#x27;SubFP213&#x27;, &#x27;SubFP214&#x27;, &#x27;SubFP215&#x27;, &#x27;SubFP216&#x27;, &#x27;SubFP217&#x27;, &#x27;SubFP218&#x27;, &#x27;SubFP219&#x27;, &#x27;SubFP220&#x27;, &#x27;SubFP221&#x27;, &#x27;SubFP222&#x27;, &#x27;SubFP223&#x27;, &#x27;SubFP224&#x27;, &#x27;SubFP225&#x27;, &#x27;SubFP226&#x27;, &#x27;SubFP227&#x27;, &#x27;SubFP228&#x27;, &#x27;SubFP229&#x27;, &#x27;SubFP230&#x27;, &#x27;SubFP231&#x27;, &#x27;SubFP232&#x27;, &#x27;SubFP233&#x27;, &#x27;SubFP234&#x27;, &#x27;SubFP235&#x27;, &#x27;SubFP236&#x27;, &#x27;SubFP237&#x27;, &#x27;SubFP238&#x27;, &#x27;SubFP239&#x27;, &#x27;SubFP240&#x27;, &#x27;SubFP241&#x27;, &#x27;SubFP242&#x27;, &#x27;SubFP243&#x27;, &#x27;SubFP244&#x27;, &#x27;SubFP245&#x27;, &#x27;SubFP246&#x27;, &#x27;SubFP247&#x27;, &#x27;SubFP248&#x27;, &#x27;SubFP249&#x27;, &#x27;SubFP250&#x27;, &#x27;SubFP251&#x27;, &#x27;SubFP252&#x27;, &#x27;SubFP253&#x27;, &#x27;SubFP254&#x27;, &#x27;SubFP255&#x27;, &#x27;SubFP256&#x27;, &#x27;SubFP257&#x27;, &#x27;SubFP258&#x27;, &#x27;SubFP259&#x27;, &#x27;SubFP260&#x27;, &#x27;SubFP261&#x27;, &#x27;SubFP262&#x27;, &#x27;SubFP263&#x27;, &#x27;SubFP264&#x27;, &#x27;SubFP265&#x27;, &#x27;SubFP266&#x27;, &#x27;SubFP267&#x27;, &#x27;SubFP268&#x27;, &#x27;SubFP269&#x27;, &#x27;SubFP270&#x27;, &#x27;SubFP271&#x27;, &#x27;SubFP272&#x27;, &#x27;SubFP273&#x27;, &#x27;SubFP274&#x27;, &#x27;SubFP275&#x27;, &#x27;SubFP276&#x27;, &#x27;SubFP277&#x27;, &#x27;SubFP278&#x27;, &#x27;SubFP279&#x27;, &#x27;SubFP280&#x27;, &#x27;SubFP281&#x27;, &#x27;SubFP282&#x27;, &#x27;SubFP283&#x27;, &#x27;SubFP284&#x27;, &#x27;SubFP285&#x27;, &#x27;SubFP286&#x27;, &#x27;SubFP287&#x27;, &#x27;SubFP288&#x27;, &#x27;SubFP289&#x27;, &#x27;SubFP290&#x27;, &#x27;SubFP291&#x27;, &#x27;SubFP292&#x27;, &#x27;SubFP293&#x27;, &#x27;SubFP294&#x27;, &#x27;SubFP295&#x27;, &#x27;SubFP296&#x27;, &#x27;SubFP297&#x27;, &#x27;SubFP298&#x27;, &#x27;SubFP299&#x27;, &#x27;SubFP300&#x27;, &#x27;SubFP301&#x27;, &#x27;SubFP302&#x27;, &#x27;SubFP303&#x27;, &#x27;SubFP304&#x27;, &#x27;SubFP305&#x27;, &#x27;SubFP306&#x27;, &#x27;SubFP307&#x27;]</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-18\" type=\"checkbox\" ><label for=\"sk-estimator-id-18\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SimpleImputer</label><div class=\"sk-toggleable__content\"><pre>SimpleImputer(strategy=&#x27;most_frequent&#x27;)</pre></div></div></div><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-19\" type=\"checkbox\" ><label for=\"sk-estimator-id-19\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">OrdinalEncoder</label><div class=\"sk-toggleable__content\"><pre>OrdinalEncoder(handle_unknown=&#x27;use_encoded_value&#x27;, unknown_value=-1)</pre></div></div></div></div></div></div></div></div></div></div><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-20\" type=\"checkbox\" ><label for=\"sk-estimator-id-20\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KNeighborsClassifier</label><div class=\"sk-toggleable__content\"><pre>KNeighborsClassifier()</pre></div></div></div></div></div></div></div>"},"metadata":{}}],"execution_count":75},{"cell_type":"code","source":"pipeline.score(X_train, y_train), pipeline.score(X_test, y_test)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T04:47:27.298969Z","iopub.execute_input":"2024-11-19T04:47:27.299416Z","iopub.status.idle":"2024-11-19T04:47:27.653002Z","shell.execute_reply.started":"2024-11-19T04:47:27.299379Z","shell.execute_reply":"2024-11-19T04:47:27.651789Z"}},"outputs":[{"execution_count":77,"output_type":"execute_result","data":{"text/plain":"(0.8322784810126582, 0.7848101265822784)"},"metadata":{}}],"execution_count":77},{"cell_type":"markdown","source":"manfaat menggunakan pipeline ini adalah memudahkan kita pada saat `cross validation` (ingat validation berbeda dengan test, validation bagian dari train).\n\nValidation ini akan berpindah-pindah dan setiap posisi akan dirata-ratakan kemudian disimpan, dan seterusnya. Ini bisa dilaksanakan dengan mudah menggunakan pipeline. Caranya hanya diubah saja nama variabel dan inputnya, apakah train atau testnya.\n\nNamun untuk proses `tuning` akan sedikit berbeda, jika kita menerapkan metode yang biasa kita pakai akan sedikit memakan waktu. Kita akan belajar teknik baru untuk melakukan tuning yaitu **`GRID SEARCH CROSS VALIDATION`**","metadata":{}},{"cell_type":"markdown","source":"## **Grid search cross validation (GridSearchCV)**","metadata":{}},{"cell_type":"code","source":"from sklearn.model_selection import GridSearchCV\npipeline.get_params() #--> mengecek parameter apa saja yang dapat dituning","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T04:49:19.306954Z","iopub.execute_input":"2024-11-19T04:49:19.307409Z","iopub.status.idle":"2024-11-19T04:49:19.349494Z","shell.execute_reply.started":"2024-11-19T04:49:19.307375Z","shell.execute_reply":"2024-11-19T04:49:19.348110Z"},"collapsed":true,"jupyter":{"outputs_hidden":true}},"outputs":[{"execution_count":78,"output_type":"execute_result","data":{"text/plain":"{'memory': None,\n 'steps': [('prep', ColumnTransformer(transformers=[('numeric',\n                                    Pipeline(steps=[('imputer', SimpleImputer()),\n                                                    ('scaler', MinMaxScaler())]),\n                                    ['MW', 'LogP', 'NumHDonors', 'NumHAcceptors']),\n                                   ('categoric',\n                                    Pipeline(steps=[('imputer',\n                                                     SimpleImputer(strategy='most_frequent')),\n                                                    ('ordinal_encoder',\n                                                     OrdinalEncoder(handle_unknown='use_encoded_value',\n                                                                    unknown_value=-1))]),\n                                    ['SubFP1', 'SubFP2', 'SubFP3', 'SubFP4',\n                                     'SubFP5', 'SubFP6', 'SubFP7', 'SubFP8',\n                                     'SubFP9', 'SubFP10', 'SubFP11', 'SubFP12',\n                                     'SubFP13', 'SubFP14', 'SubFP15', 'SubFP16',\n                                     'SubFP17', 'SubFP18', 'SubFP19', 'SubFP20',\n                                     'SubFP21', 'SubFP22', 'SubFP23', 'SubFP24',\n                                     'SubFP25', 'SubFP26', 'SubFP27', 'SubFP28',\n                                     'SubFP29', 'SubFP30', ...])])),\n  ('algo', KNeighborsClassifier())],\n 'verbose': False,\n 'prep': ColumnTransformer(transformers=[('numeric',\n                                  Pipeline(steps=[('imputer', SimpleImputer()),\n                                                  ('scaler', MinMaxScaler())]),\n                                  ['MW', 'LogP', 'NumHDonors', 'NumHAcceptors']),\n                                 ('categoric',\n                                  Pipeline(steps=[('imputer',\n                                                   SimpleImputer(strategy='most_frequent')),\n                                                  ('ordinal_encoder',\n                                                   OrdinalEncoder(handle_unknown='use_encoded_value',\n                                                                  unknown_value=-1))]),\n                                  ['SubFP1', 'SubFP2', 'SubFP3', 'SubFP4',\n                                   'SubFP5', 'SubFP6', 'SubFP7', 'SubFP8',\n                                   'SubFP9', 'SubFP10', 'SubFP11', 'SubFP12',\n                                   'SubFP13', 'SubFP14', 'SubFP15', 'SubFP16',\n                                   'SubFP17', 'SubFP18', 'SubFP19', 'SubFP20',\n                                   'SubFP21', 'SubFP22', 'SubFP23', 'SubFP24',\n                                   'SubFP25', 'SubFP26', 'SubFP27', 'SubFP28',\n                                   'SubFP29', 'SubFP30', ...])]),\n 'algo': KNeighborsClassifier(),\n 'prep__n_jobs': None,\n 'prep__remainder': 'drop',\n 'prep__sparse_threshold': 0.3,\n 'prep__transformer_weights': None,\n 'prep__transformers': [('numeric',\n   Pipeline(steps=[('imputer', SimpleImputer()), ('scaler', MinMaxScaler())]),\n   ['MW', 'LogP', 'NumHDonors', 'NumHAcceptors']),\n  ('categoric',\n   Pipeline(steps=[('imputer', SimpleImputer(strategy='most_frequent')),\n                   ('ordinal_encoder',\n                    OrdinalEncoder(handle_unknown='use_encoded_value',\n                                   unknown_value=-1))]),\n   ['SubFP1',\n    'SubFP2',\n    'SubFP3',\n    'SubFP4',\n    'SubFP5',\n    'SubFP6',\n    'SubFP7',\n    'SubFP8',\n    'SubFP9',\n    'SubFP10',\n    'SubFP11',\n    'SubFP12',\n    'SubFP13',\n    'SubFP14',\n    'SubFP15',\n    'SubFP16',\n    'SubFP17',\n    'SubFP18',\n    'SubFP19',\n    'SubFP20',\n    'SubFP21',\n    'SubFP22',\n    'SubFP23',\n    'SubFP24',\n    'SubFP25',\n    'SubFP26',\n    'SubFP27',\n    'SubFP28',\n    'SubFP29',\n    'SubFP30',\n    'SubFP31',\n    'SubFP32',\n    'SubFP33',\n    'SubFP34',\n    'SubFP35',\n    'SubFP36',\n    'SubFP37',\n    'SubFP38',\n    'SubFP39',\n    'SubFP40',\n    'SubFP41',\n    'SubFP42',\n    'SubFP43',\n    'SubFP44',\n    'SubFP45',\n    'SubFP46',\n    'SubFP47',\n    'SubFP48',\n    'SubFP49',\n    'SubFP50',\n    'SubFP51',\n    'SubFP52',\n    'SubFP53',\n    'SubFP54',\n    'SubFP55',\n    'SubFP56',\n    'SubFP57',\n    'SubFP58',\n    'SubFP59',\n    'SubFP60',\n    'SubFP61',\n    'SubFP62',\n    'SubFP63',\n    'SubFP64',\n    'SubFP65',\n    'SubFP66',\n    'SubFP67',\n    'SubFP68',\n    'SubFP69',\n    'SubFP70',\n    'SubFP71',\n    'SubFP72',\n    'SubFP73',\n    'SubFP74',\n    'SubFP75',\n    'SubFP76',\n    'SubFP77',\n    'SubFP78',\n    'SubFP79',\n    'SubFP80',\n    'SubFP81',\n    'SubFP82',\n    'SubFP83',\n    'SubFP84',\n    'SubFP85',\n    'SubFP86',\n    'SubFP87',\n    'SubFP88',\n    'SubFP89',\n    'SubFP90',\n    'SubFP91',\n    'SubFP92',\n    'SubFP93',\n    'SubFP94',\n    'SubFP95',\n    'SubFP96',\n    'SubFP97',\n    'SubFP98',\n    'SubFP99',\n    'SubFP100',\n    'SubFP101',\n    'SubFP102',\n    'SubFP103',\n    'SubFP104',\n    'SubFP105',\n    'SubFP106',\n    'SubFP107',\n    'SubFP108',\n    'SubFP109',\n    'SubFP110',\n    'SubFP111',\n    'SubFP112',\n    'SubFP113',\n    'SubFP114',\n    'SubFP115',\n    'SubFP116',\n    'SubFP117',\n    'SubFP118',\n    'SubFP119',\n    'SubFP120',\n    'SubFP121',\n    'SubFP122',\n    'SubFP123',\n    'SubFP124',\n    'SubFP125',\n    'SubFP126',\n    'SubFP127',\n    'SubFP128',\n    'SubFP129',\n    'SubFP130',\n    'SubFP131',\n    'SubFP132',\n    'SubFP133',\n    'SubFP134',\n    'SubFP135',\n    'SubFP136',\n    'SubFP137',\n    'SubFP138',\n    'SubFP139',\n    'SubFP140',\n    'SubFP141',\n    'SubFP142',\n    'SubFP143',\n    'SubFP144',\n    'SubFP145',\n    'SubFP146',\n    'SubFP147',\n    'SubFP148',\n    'SubFP149',\n    'SubFP150',\n    'SubFP151',\n    'SubFP152',\n    'SubFP153',\n    'SubFP154',\n    'SubFP155',\n    'SubFP156',\n    'SubFP157',\n    'SubFP158',\n    'SubFP159',\n    'SubFP160',\n    'SubFP161',\n    'SubFP162',\n    'SubFP163',\n    'SubFP164',\n    'SubFP165',\n    'SubFP166',\n    'SubFP167',\n    'SubFP168',\n    'SubFP169',\n    'SubFP170',\n    'SubFP171',\n    'SubFP172',\n    'SubFP173',\n    'SubFP174',\n    'SubFP175',\n    'SubFP176',\n    'SubFP177',\n    'SubFP178',\n    'SubFP179',\n    'SubFP180',\n    'SubFP181',\n    'SubFP182',\n    'SubFP183',\n    'SubFP184',\n    'SubFP185',\n    'SubFP186',\n    'SubFP187',\n    'SubFP188',\n    'SubFP189',\n    'SubFP190',\n    'SubFP191',\n    'SubFP192',\n    'SubFP193',\n    'SubFP194',\n    'SubFP195',\n    'SubFP196',\n    'SubFP197',\n    'SubFP198',\n    'SubFP199',\n    'SubFP200',\n    'SubFP201',\n    'SubFP202',\n    'SubFP203',\n    'SubFP204',\n    'SubFP205',\n    'SubFP206',\n    'SubFP207',\n    'SubFP208',\n    'SubFP209',\n    'SubFP210',\n    'SubFP211',\n    'SubFP212',\n    'SubFP213',\n    'SubFP214',\n    'SubFP215',\n    'SubFP216',\n    'SubFP217',\n    'SubFP218',\n    'SubFP219',\n    'SubFP220',\n    'SubFP221',\n    'SubFP222',\n    'SubFP223',\n    'SubFP224',\n    'SubFP225',\n    'SubFP226',\n    'SubFP227',\n    'SubFP228',\n    'SubFP229',\n    'SubFP230',\n    'SubFP231',\n    'SubFP232',\n    'SubFP233',\n    'SubFP234',\n    'SubFP235',\n    'SubFP236',\n    'SubFP237',\n    'SubFP238',\n    'SubFP239',\n    'SubFP240',\n    'SubFP241',\n    'SubFP242',\n    'SubFP243',\n    'SubFP244',\n    'SubFP245',\n    'SubFP246',\n    'SubFP247',\n    'SubFP248',\n    'SubFP249',\n    'SubFP250',\n    'SubFP251',\n    'SubFP252',\n    'SubFP253',\n    'SubFP254',\n    'SubFP255',\n    'SubFP256',\n    'SubFP257',\n    'SubFP258',\n    'SubFP259',\n    'SubFP260',\n    'SubFP261',\n    'SubFP262',\n    'SubFP263',\n    'SubFP264',\n    'SubFP265',\n    'SubFP266',\n    'SubFP267',\n    'SubFP268',\n    'SubFP269',\n    'SubFP270',\n    'SubFP271',\n    'SubFP272',\n    'SubFP273',\n    'SubFP274',\n    'SubFP275',\n    'SubFP276',\n    'SubFP277',\n    'SubFP278',\n    'SubFP279',\n    'SubFP280',\n    'SubFP281',\n    'SubFP282',\n    'SubFP283',\n    'SubFP284',\n    'SubFP285',\n    'SubFP286',\n    'SubFP287',\n    'SubFP288',\n    'SubFP289',\n    'SubFP290',\n    'SubFP291',\n    'SubFP292',\n    'SubFP293',\n    'SubFP294',\n    'SubFP295',\n    'SubFP296',\n    'SubFP297',\n    'SubFP298',\n    'SubFP299',\n    'SubFP300',\n    'SubFP301',\n    'SubFP302',\n    'SubFP303',\n    'SubFP304',\n    'SubFP305',\n    'SubFP306',\n    'SubFP307'])],\n 'prep__verbose': False,\n 'prep__verbose_feature_names_out': True,\n 'prep__numeric': Pipeline(steps=[('imputer', SimpleImputer()), ('scaler', MinMaxScaler())]),\n 'prep__categoric': Pipeline(steps=[('imputer', SimpleImputer(strategy='most_frequent')),\n                 ('ordinal_encoder',\n                  OrdinalEncoder(handle_unknown='use_encoded_value',\n                                 unknown_value=-1))]),\n 'prep__numeric__memory': None,\n 'prep__numeric__steps': [('imputer', SimpleImputer()),\n  ('scaler', MinMaxScaler())],\n 'prep__numeric__verbose': False,\n 'prep__numeric__imputer': SimpleImputer(),\n 'prep__numeric__scaler': MinMaxScaler(),\n 'prep__numeric__imputer__add_indicator': False,\n 'prep__numeric__imputer__copy': True,\n 'prep__numeric__imputer__fill_value': None,\n 'prep__numeric__imputer__keep_empty_features': False,\n 'prep__numeric__imputer__missing_values': nan,\n 'prep__numeric__imputer__strategy': 'mean',\n 'prep__numeric__imputer__verbose': 'deprecated',\n 'prep__numeric__scaler__clip': False,\n 'prep__numeric__scaler__copy': True,\n 'prep__numeric__scaler__feature_range': (0, 1),\n 'prep__categoric__memory': None,\n 'prep__categoric__steps': [('imputer',\n   SimpleImputer(strategy='most_frequent')),\n  ('ordinal_encoder',\n   OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1))],\n 'prep__categoric__verbose': False,\n 'prep__categoric__imputer': SimpleImputer(strategy='most_frequent'),\n 'prep__categoric__ordinal_encoder': OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1),\n 'prep__categoric__imputer__add_indicator': False,\n 'prep__categoric__imputer__copy': True,\n 'prep__categoric__imputer__fill_value': None,\n 'prep__categoric__imputer__keep_empty_features': False,\n 'prep__categoric__imputer__missing_values': nan,\n 'prep__categoric__imputer__strategy': 'most_frequent',\n 'prep__categoric__imputer__verbose': 'deprecated',\n 'prep__categoric__ordinal_encoder__categories': 'auto',\n 'prep__categoric__ordinal_encoder__dtype': numpy.float64,\n 'prep__categoric__ordinal_encoder__encoded_missing_value': nan,\n 'prep__categoric__ordinal_encoder__handle_unknown': 'use_encoded_value',\n 'prep__categoric__ordinal_encoder__unknown_value': -1,\n 'algo__algorithm': 'auto',\n 'algo__leaf_size': 30,\n 'algo__metric': 'minkowski',\n 'algo__metric_params': None,\n 'algo__n_jobs': None,\n 'algo__n_neighbors': 5,\n 'algo__p': 2,\n 'algo__weights': 'uniform'}"},"metadata":{}}],"execution_count":78},{"cell_type":"code","source":"parameter = {\n    \"algo__n_neighbors\": range(1, 51, 2),\n    \"algo__weights\": [\"uniform\", \"distance\"],\n    \"algo__p\": [1,2]\n}\n\nmodel = GridSearchCV(pipeline, parameter, cv=3, n_jobs=-1, verbose=1)\nmodel.fit(X_train, y_train)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T04:50:02.837928Z","iopub.execute_input":"2024-11-19T04:50:02.838390Z","iopub.status.idle":"2024-11-19T04:51:17.870332Z","shell.execute_reply.started":"2024-11-19T04:50:02.838347Z","shell.execute_reply":"2024-11-19T04:51:17.868792Z"}},"outputs":[{"name":"stdout","text":"Fitting 3 folds for each of 100 candidates, totalling 300 fits\n","output_type":"stream"},{"execution_count":79,"output_type":"execute_result","data":{"text/plain":"GridSearchCV(cv=3,\n             estimator=Pipeline(steps=[('prep',\n                                        ColumnTransformer(transformers=[('numeric',\n                                                                         Pipeline(steps=[('imputer',\n                                                                                          SimpleImputer()),\n                                                                                         ('scaler',\n                                                                                          MinMaxScaler())]),\n                                                                         ['MW',\n                                                                          'LogP',\n                                                                          'NumHDonors',\n                                                                          'NumHAcceptors']),\n                                                                        ('categoric',\n                                                                         Pipeline(steps=[('imputer',\n                                                                                          SimpleImputer(strategy='most_frequent')),\n                                                                                         ('ordinal_encoder',\n                                                                                          OrdinalEncoder(handle_unknown='use_enco...\n                                                                          'SubFP12',\n                                                                          'SubFP13',\n                                                                          'SubFP14',\n                                                                          'SubFP15',\n                                                                          'SubFP16',\n                                                                          'SubFP17',\n                                                                          'SubFP18',\n                                                                          'SubFP19',\n                                                                          'SubFP20',\n                                                                          'SubFP21',\n                                                                          'SubFP22',\n                                                                          'SubFP23',\n                                                                          'SubFP24',\n                                                                          'SubFP25',\n                                                                          'SubFP26',\n                                                                          'SubFP27',\n                                                                          'SubFP28',\n                                                                          'SubFP29',\n                                                                          'SubFP30', ...])])),\n                                       ('algo', KNeighborsClassifier())]),\n             n_jobs=-1,\n             param_grid={'algo__n_neighbors': range(1, 51, 2),\n                         'algo__p': [1, 2],\n                         'algo__weights': ['uniform', 'distance']},\n             verbose=1)","text/html":"<style>#sk-container-id-5 {color: black;background-color: white;}#sk-container-id-5 pre{padding: 0;}#sk-container-id-5 div.sk-toggleable {background-color: white;}#sk-container-id-5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-5 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-5 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-5 div.sk-item {position: relative;z-index: 1;}#sk-container-id-5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-5 div.sk-item::before, #sk-container-id-5 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-5 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-5 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-5 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-5 div.sk-label-container {text-align: center;}#sk-container-id-5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-5 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-5\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(cv=3,\n             estimator=Pipeline(steps=[(&#x27;prep&#x27;,\n                                        ColumnTransformer(transformers=[(&#x27;numeric&#x27;,\n                                                                         Pipeline(steps=[(&#x27;imputer&#x27;,\n                                                                                          SimpleImputer()),\n                                                                                         (&#x27;scaler&#x27;,\n                                                                                          MinMaxScaler())]),\n                                                                         [&#x27;MW&#x27;,\n                                                                          &#x27;LogP&#x27;,\n                                                                          &#x27;NumHDonors&#x27;,\n                                                                          &#x27;NumHAcceptors&#x27;]),\n                                                                        (&#x27;categoric&#x27;,\n                                                                         Pipeline(steps=[(&#x27;imputer&#x27;,\n                                                                                          SimpleImputer(strategy=&#x27;most_frequent&#x27;)),\n                                                                                         (&#x27;ordinal_encoder&#x27;,\n                                                                                          OrdinalEncoder(handle_unknown=&#x27;use_enco...\n                                                                          &#x27;SubFP12&#x27;,\n                                                                          &#x27;SubFP13&#x27;,\n                                                                          &#x27;SubFP14&#x27;,\n                                                                          &#x27;SubFP15&#x27;,\n                                                                          &#x27;SubFP16&#x27;,\n                                                                          &#x27;SubFP17&#x27;,\n                                                                          &#x27;SubFP18&#x27;,\n                                                                          &#x27;SubFP19&#x27;,\n                                                                          &#x27;SubFP20&#x27;,\n                                                                          &#x27;SubFP21&#x27;,\n                                                                          &#x27;SubFP22&#x27;,\n                                                                          &#x27;SubFP23&#x27;,\n                                                                          &#x27;SubFP24&#x27;,\n                                                                          &#x27;SubFP25&#x27;,\n                                                                          &#x27;SubFP26&#x27;,\n                                                                          &#x27;SubFP27&#x27;,\n                                                                          &#x27;SubFP28&#x27;,\n                                                                          &#x27;SubFP29&#x27;,\n                                                                          &#x27;SubFP30&#x27;, ...])])),\n                                       (&#x27;algo&#x27;, KNeighborsClassifier())]),\n             n_jobs=-1,\n             param_grid={&#x27;algo__n_neighbors&#x27;: range(1, 51, 2),\n                         &#x27;algo__p&#x27;: [1, 2],\n                         &#x27;algo__weights&#x27;: [&#x27;uniform&#x27;, &#x27;distance&#x27;]},\n             verbose=1)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-21\" type=\"checkbox\" ><label for=\"sk-estimator-id-21\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GridSearchCV</label><div class=\"sk-toggleable__content\"><pre>GridSearchCV(cv=3,\n             estimator=Pipeline(steps=[(&#x27;prep&#x27;,\n                                        ColumnTransformer(transformers=[(&#x27;numeric&#x27;,\n                                                                         Pipeline(steps=[(&#x27;imputer&#x27;,\n                                                                                          SimpleImputer()),\n                                                                                         (&#x27;scaler&#x27;,\n                                                                                          MinMaxScaler())]),\n                                                                         [&#x27;MW&#x27;,\n                                                                          &#x27;LogP&#x27;,\n                                                                          &#x27;NumHDonors&#x27;,\n                                                                          &#x27;NumHAcceptors&#x27;]),\n                                                                        (&#x27;categoric&#x27;,\n                                                                         Pipeline(steps=[(&#x27;imputer&#x27;,\n                                                                                          SimpleImputer(strategy=&#x27;most_frequent&#x27;)),\n                                                                                         (&#x27;ordinal_encoder&#x27;,\n                                                                                          OrdinalEncoder(handle_unknown=&#x27;use_enco...\n                                                                          &#x27;SubFP12&#x27;,\n                                                                          &#x27;SubFP13&#x27;,\n                                                                          &#x27;SubFP14&#x27;,\n                                                                          &#x27;SubFP15&#x27;,\n                                                                          &#x27;SubFP16&#x27;,\n                                                                          &#x27;SubFP17&#x27;,\n                                                                          &#x27;SubFP18&#x27;,\n                                                                          &#x27;SubFP19&#x27;,\n                                                                          &#x27;SubFP20&#x27;,\n                                                                          &#x27;SubFP21&#x27;,\n                                                                          &#x27;SubFP22&#x27;,\n                                                                          &#x27;SubFP23&#x27;,\n                                                                          &#x27;SubFP24&#x27;,\n                                                                          &#x27;SubFP25&#x27;,\n                                                                          &#x27;SubFP26&#x27;,\n                                                                          &#x27;SubFP27&#x27;,\n                                                                          &#x27;SubFP28&#x27;,\n                                                                          &#x27;SubFP29&#x27;,\n                                                                          &#x27;SubFP30&#x27;, ...])])),\n                                       (&#x27;algo&#x27;, KNeighborsClassifier())]),\n             n_jobs=-1,\n             param_grid={&#x27;algo__n_neighbors&#x27;: range(1, 51, 2),\n                         &#x27;algo__p&#x27;: [1, 2],\n                         &#x27;algo__weights&#x27;: [&#x27;uniform&#x27;, &#x27;distance&#x27;]},\n             verbose=1)</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-22\" type=\"checkbox\" ><label for=\"sk-estimator-id-22\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: Pipeline</label><div class=\"sk-toggleable__content\"><pre>Pipeline(steps=[(&#x27;prep&#x27;,\n                 ColumnTransformer(transformers=[(&#x27;numeric&#x27;,\n                                                  Pipeline(steps=[(&#x27;imputer&#x27;,\n                                                                   SimpleImputer()),\n                                                                  (&#x27;scaler&#x27;,\n                                                                   MinMaxScaler())]),\n                                                  [&#x27;MW&#x27;, &#x27;LogP&#x27;, &#x27;NumHDonors&#x27;,\n                                                   &#x27;NumHAcceptors&#x27;]),\n                                                 (&#x27;categoric&#x27;,\n                                                  Pipeline(steps=[(&#x27;imputer&#x27;,\n                                                                   SimpleImputer(strategy=&#x27;most_frequent&#x27;)),\n                                                                  (&#x27;ordinal_encoder&#x27;,\n                                                                   OrdinalEncoder(handle_unknown=&#x27;use_encoded_value&#x27;,\n                                                                                  unknown_value=-1))]),\n                                                  [&#x27;SubFP1&#x27;, &#x27;SubFP2&#x27;, &#x27;SubFP3&#x27;,\n                                                   &#x27;SubFP4&#x27;, &#x27;SubFP5&#x27;, &#x27;SubFP6&#x27;,\n                                                   &#x27;SubFP7&#x27;, &#x27;SubFP8&#x27;, &#x27;SubFP9&#x27;,\n                                                   &#x27;SubFP10&#x27;, &#x27;SubFP11&#x27;,\n                                                   &#x27;SubFP12&#x27;, &#x27;SubFP13&#x27;,\n                                                   &#x27;SubFP14&#x27;, &#x27;SubFP15&#x27;,\n                                                   &#x27;SubFP16&#x27;, &#x27;SubFP17&#x27;,\n                                                   &#x27;SubFP18&#x27;, &#x27;SubFP19&#x27;,\n                                                   &#x27;SubFP20&#x27;, &#x27;SubFP21&#x27;,\n                                                   &#x27;SubFP22&#x27;, &#x27;SubFP23&#x27;,\n                                                   &#x27;SubFP24&#x27;, &#x27;SubFP25&#x27;,\n                                                   &#x27;SubFP26&#x27;, &#x27;SubFP27&#x27;,\n                                                   &#x27;SubFP28&#x27;, &#x27;SubFP29&#x27;,\n                                                   &#x27;SubFP30&#x27;, ...])])),\n                (&#x27;algo&#x27;, KNeighborsClassifier())])</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-serial\"><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-23\" type=\"checkbox\" ><label for=\"sk-estimator-id-23\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">prep: ColumnTransformer</label><div class=\"sk-toggleable__content\"><pre>ColumnTransformer(transformers=[(&#x27;numeric&#x27;,\n                                 Pipeline(steps=[(&#x27;imputer&#x27;, SimpleImputer()),\n                                                 (&#x27;scaler&#x27;, MinMaxScaler())]),\n                                 [&#x27;MW&#x27;, &#x27;LogP&#x27;, &#x27;NumHDonors&#x27;, &#x27;NumHAcceptors&#x27;]),\n                                (&#x27;categoric&#x27;,\n                                 Pipeline(steps=[(&#x27;imputer&#x27;,\n                                                  SimpleImputer(strategy=&#x27;most_frequent&#x27;)),\n                                                 (&#x27;ordinal_encoder&#x27;,\n                                                  OrdinalEncoder(handle_unknown=&#x27;use_encoded_value&#x27;,\n                                                                 unknown_value=-1))]),\n                                 [&#x27;SubFP1&#x27;, &#x27;SubFP2&#x27;, &#x27;SubFP3&#x27;, &#x27;SubFP4&#x27;,\n                                  &#x27;SubFP5&#x27;, &#x27;SubFP6&#x27;, &#x27;SubFP7&#x27;, &#x27;SubFP8&#x27;,\n                                  &#x27;SubFP9&#x27;, &#x27;SubFP10&#x27;, &#x27;SubFP11&#x27;, &#x27;SubFP12&#x27;,\n                                  &#x27;SubFP13&#x27;, &#x27;SubFP14&#x27;, &#x27;SubFP15&#x27;, &#x27;SubFP16&#x27;,\n                                  &#x27;SubFP17&#x27;, &#x27;SubFP18&#x27;, &#x27;SubFP19&#x27;, &#x27;SubFP20&#x27;,\n                                  &#x27;SubFP21&#x27;, &#x27;SubFP22&#x27;, &#x27;SubFP23&#x27;, &#x27;SubFP24&#x27;,\n                                  &#x27;SubFP25&#x27;, &#x27;SubFP26&#x27;, &#x27;SubFP27&#x27;, &#x27;SubFP28&#x27;,\n                                  &#x27;SubFP29&#x27;, &#x27;SubFP30&#x27;, ...])])</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-24\" type=\"checkbox\" ><label for=\"sk-estimator-id-24\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">numeric</label><div class=\"sk-toggleable__content\"><pre>[&#x27;MW&#x27;, &#x27;LogP&#x27;, &#x27;NumHDonors&#x27;, &#x27;NumHAcceptors&#x27;]</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-25\" type=\"checkbox\" ><label for=\"sk-estimator-id-25\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SimpleImputer</label><div class=\"sk-toggleable__content\"><pre>SimpleImputer()</pre></div></div></div><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-26\" type=\"checkbox\" ><label for=\"sk-estimator-id-26\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">MinMaxScaler</label><div class=\"sk-toggleable__content\"><pre>MinMaxScaler()</pre></div></div></div></div></div></div></div></div><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-27\" type=\"checkbox\" ><label for=\"sk-estimator-id-27\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">categoric</label><div class=\"sk-toggleable__content\"><pre>[&#x27;SubFP1&#x27;, &#x27;SubFP2&#x27;, &#x27;SubFP3&#x27;, &#x27;SubFP4&#x27;, &#x27;SubFP5&#x27;, &#x27;SubFP6&#x27;, &#x27;SubFP7&#x27;, &#x27;SubFP8&#x27;, &#x27;SubFP9&#x27;, &#x27;SubFP10&#x27;, &#x27;SubFP11&#x27;, &#x27;SubFP12&#x27;, &#x27;SubFP13&#x27;, &#x27;SubFP14&#x27;, &#x27;SubFP15&#x27;, &#x27;SubFP16&#x27;, &#x27;SubFP17&#x27;, &#x27;SubFP18&#x27;, &#x27;SubFP19&#x27;, &#x27;SubFP20&#x27;, &#x27;SubFP21&#x27;, &#x27;SubFP22&#x27;, &#x27;SubFP23&#x27;, &#x27;SubFP24&#x27;, &#x27;SubFP25&#x27;, &#x27;SubFP26&#x27;, &#x27;SubFP27&#x27;, &#x27;SubFP28&#x27;, &#x27;SubFP29&#x27;, &#x27;SubFP30&#x27;, &#x27;SubFP31&#x27;, &#x27;SubFP32&#x27;, &#x27;SubFP33&#x27;, &#x27;SubFP34&#x27;, &#x27;SubFP35&#x27;, &#x27;SubFP36&#x27;, &#x27;SubFP37&#x27;, &#x27;SubFP38&#x27;, &#x27;SubFP39&#x27;, &#x27;SubFP40&#x27;, &#x27;SubFP41&#x27;, &#x27;SubFP42&#x27;, &#x27;SubFP43&#x27;, &#x27;SubFP44&#x27;, &#x27;SubFP45&#x27;, &#x27;SubFP46&#x27;, &#x27;SubFP47&#x27;, &#x27;SubFP48&#x27;, &#x27;SubFP49&#x27;, &#x27;SubFP50&#x27;, &#x27;SubFP51&#x27;, &#x27;SubFP52&#x27;, &#x27;SubFP53&#x27;, &#x27;SubFP54&#x27;, &#x27;SubFP55&#x27;, &#x27;SubFP56&#x27;, &#x27;SubFP57&#x27;, &#x27;SubFP58&#x27;, &#x27;SubFP59&#x27;, &#x27;SubFP60&#x27;, &#x27;SubFP61&#x27;, &#x27;SubFP62&#x27;, &#x27;SubFP63&#x27;, &#x27;SubFP64&#x27;, &#x27;SubFP65&#x27;, &#x27;SubFP66&#x27;, &#x27;SubFP67&#x27;, &#x27;SubFP68&#x27;, &#x27;SubFP69&#x27;, &#x27;SubFP70&#x27;, &#x27;SubFP71&#x27;, &#x27;SubFP72&#x27;, &#x27;SubFP73&#x27;, &#x27;SubFP74&#x27;, &#x27;SubFP75&#x27;, &#x27;SubFP76&#x27;, &#x27;SubFP77&#x27;, &#x27;SubFP78&#x27;, &#x27;SubFP79&#x27;, &#x27;SubFP80&#x27;, &#x27;SubFP81&#x27;, &#x27;SubFP82&#x27;, &#x27;SubFP83&#x27;, &#x27;SubFP84&#x27;, &#x27;SubFP85&#x27;, &#x27;SubFP86&#x27;, &#x27;SubFP87&#x27;, &#x27;SubFP88&#x27;, &#x27;SubFP89&#x27;, &#x27;SubFP90&#x27;, &#x27;SubFP91&#x27;, &#x27;SubFP92&#x27;, &#x27;SubFP93&#x27;, &#x27;SubFP94&#x27;, &#x27;SubFP95&#x27;, &#x27;SubFP96&#x27;, &#x27;SubFP97&#x27;, &#x27;SubFP98&#x27;, &#x27;SubFP99&#x27;, &#x27;SubFP100&#x27;, &#x27;SubFP101&#x27;, &#x27;SubFP102&#x27;, &#x27;SubFP103&#x27;, &#x27;SubFP104&#x27;, &#x27;SubFP105&#x27;, &#x27;SubFP106&#x27;, &#x27;SubFP107&#x27;, &#x27;SubFP108&#x27;, &#x27;SubFP109&#x27;, &#x27;SubFP110&#x27;, &#x27;SubFP111&#x27;, &#x27;SubFP112&#x27;, &#x27;SubFP113&#x27;, &#x27;SubFP114&#x27;, &#x27;SubFP115&#x27;, &#x27;SubFP116&#x27;, &#x27;SubFP117&#x27;, &#x27;SubFP118&#x27;, &#x27;SubFP119&#x27;, &#x27;SubFP120&#x27;, &#x27;SubFP121&#x27;, &#x27;SubFP122&#x27;, &#x27;SubFP123&#x27;, &#x27;SubFP124&#x27;, &#x27;SubFP125&#x27;, &#x27;SubFP126&#x27;, &#x27;SubFP127&#x27;, &#x27;SubFP128&#x27;, &#x27;SubFP129&#x27;, &#x27;SubFP130&#x27;, &#x27;SubFP131&#x27;, &#x27;SubFP132&#x27;, &#x27;SubFP133&#x27;, &#x27;SubFP134&#x27;, &#x27;SubFP135&#x27;, &#x27;SubFP136&#x27;, &#x27;SubFP137&#x27;, &#x27;SubFP138&#x27;, &#x27;SubFP139&#x27;, &#x27;SubFP140&#x27;, &#x27;SubFP141&#x27;, &#x27;SubFP142&#x27;, &#x27;SubFP143&#x27;, &#x27;SubFP144&#x27;, &#x27;SubFP145&#x27;, &#x27;SubFP146&#x27;, &#x27;SubFP147&#x27;, &#x27;SubFP148&#x27;, &#x27;SubFP149&#x27;, &#x27;SubFP150&#x27;, &#x27;SubFP151&#x27;, &#x27;SubFP152&#x27;, &#x27;SubFP153&#x27;, &#x27;SubFP154&#x27;, &#x27;SubFP155&#x27;, &#x27;SubFP156&#x27;, &#x27;SubFP157&#x27;, &#x27;SubFP158&#x27;, &#x27;SubFP159&#x27;, &#x27;SubFP160&#x27;, &#x27;SubFP161&#x27;, &#x27;SubFP162&#x27;, &#x27;SubFP163&#x27;, &#x27;SubFP164&#x27;, &#x27;SubFP165&#x27;, &#x27;SubFP166&#x27;, &#x27;SubFP167&#x27;, &#x27;SubFP168&#x27;, &#x27;SubFP169&#x27;, &#x27;SubFP170&#x27;, &#x27;SubFP171&#x27;, &#x27;SubFP172&#x27;, &#x27;SubFP173&#x27;, &#x27;SubFP174&#x27;, &#x27;SubFP175&#x27;, &#x27;SubFP176&#x27;, &#x27;SubFP177&#x27;, &#x27;SubFP178&#x27;, &#x27;SubFP179&#x27;, &#x27;SubFP180&#x27;, &#x27;SubFP181&#x27;, &#x27;SubFP182&#x27;, &#x27;SubFP183&#x27;, &#x27;SubFP184&#x27;, &#x27;SubFP185&#x27;, &#x27;SubFP186&#x27;, &#x27;SubFP187&#x27;, &#x27;SubFP188&#x27;, &#x27;SubFP189&#x27;, &#x27;SubFP190&#x27;, &#x27;SubFP191&#x27;, &#x27;SubFP192&#x27;, &#x27;SubFP193&#x27;, &#x27;SubFP194&#x27;, &#x27;SubFP195&#x27;, &#x27;SubFP196&#x27;, &#x27;SubFP197&#x27;, &#x27;SubFP198&#x27;, &#x27;SubFP199&#x27;, &#x27;SubFP200&#x27;, &#x27;SubFP201&#x27;, &#x27;SubFP202&#x27;, &#x27;SubFP203&#x27;, &#x27;SubFP204&#x27;, &#x27;SubFP205&#x27;, &#x27;SubFP206&#x27;, &#x27;SubFP207&#x27;, &#x27;SubFP208&#x27;, &#x27;SubFP209&#x27;, &#x27;SubFP210&#x27;, &#x27;SubFP211&#x27;, &#x27;SubFP212&#x27;, &#x27;SubFP213&#x27;, &#x27;SubFP214&#x27;, &#x27;SubFP215&#x27;, &#x27;SubFP216&#x27;, &#x27;SubFP217&#x27;, &#x27;SubFP218&#x27;, &#x27;SubFP219&#x27;, &#x27;SubFP220&#x27;, &#x27;SubFP221&#x27;, &#x27;SubFP222&#x27;, &#x27;SubFP223&#x27;, &#x27;SubFP224&#x27;, &#x27;SubFP225&#x27;, &#x27;SubFP226&#x27;, &#x27;SubFP227&#x27;, &#x27;SubFP228&#x27;, &#x27;SubFP229&#x27;, &#x27;SubFP230&#x27;, &#x27;SubFP231&#x27;, &#x27;SubFP232&#x27;, &#x27;SubFP233&#x27;, &#x27;SubFP234&#x27;, &#x27;SubFP235&#x27;, &#x27;SubFP236&#x27;, &#x27;SubFP237&#x27;, &#x27;SubFP238&#x27;, &#x27;SubFP239&#x27;, &#x27;SubFP240&#x27;, &#x27;SubFP241&#x27;, &#x27;SubFP242&#x27;, &#x27;SubFP243&#x27;, &#x27;SubFP244&#x27;, &#x27;SubFP245&#x27;, &#x27;SubFP246&#x27;, &#x27;SubFP247&#x27;, &#x27;SubFP248&#x27;, &#x27;SubFP249&#x27;, &#x27;SubFP250&#x27;, &#x27;SubFP251&#x27;, &#x27;SubFP252&#x27;, &#x27;SubFP253&#x27;, &#x27;SubFP254&#x27;, &#x27;SubFP255&#x27;, &#x27;SubFP256&#x27;, &#x27;SubFP257&#x27;, &#x27;SubFP258&#x27;, &#x27;SubFP259&#x27;, &#x27;SubFP260&#x27;, &#x27;SubFP261&#x27;, &#x27;SubFP262&#x27;, &#x27;SubFP263&#x27;, &#x27;SubFP264&#x27;, &#x27;SubFP265&#x27;, &#x27;SubFP266&#x27;, &#x27;SubFP267&#x27;, &#x27;SubFP268&#x27;, &#x27;SubFP269&#x27;, &#x27;SubFP270&#x27;, &#x27;SubFP271&#x27;, &#x27;SubFP272&#x27;, &#x27;SubFP273&#x27;, &#x27;SubFP274&#x27;, &#x27;SubFP275&#x27;, &#x27;SubFP276&#x27;, &#x27;SubFP277&#x27;, &#x27;SubFP278&#x27;, &#x27;SubFP279&#x27;, &#x27;SubFP280&#x27;, &#x27;SubFP281&#x27;, &#x27;SubFP282&#x27;, &#x27;SubFP283&#x27;, &#x27;SubFP284&#x27;, &#x27;SubFP285&#x27;, &#x27;SubFP286&#x27;, &#x27;SubFP287&#x27;, &#x27;SubFP288&#x27;, &#x27;SubFP289&#x27;, &#x27;SubFP290&#x27;, &#x27;SubFP291&#x27;, &#x27;SubFP292&#x27;, &#x27;SubFP293&#x27;, &#x27;SubFP294&#x27;, &#x27;SubFP295&#x27;, &#x27;SubFP296&#x27;, &#x27;SubFP297&#x27;, &#x27;SubFP298&#x27;, &#x27;SubFP299&#x27;, &#x27;SubFP300&#x27;, &#x27;SubFP301&#x27;, &#x27;SubFP302&#x27;, &#x27;SubFP303&#x27;, &#x27;SubFP304&#x27;, &#x27;SubFP305&#x27;, &#x27;SubFP306&#x27;, &#x27;SubFP307&#x27;]</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-28\" type=\"checkbox\" ><label for=\"sk-estimator-id-28\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SimpleImputer</label><div class=\"sk-toggleable__content\"><pre>SimpleImputer(strategy=&#x27;most_frequent&#x27;)</pre></div></div></div><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-29\" type=\"checkbox\" ><label for=\"sk-estimator-id-29\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">OrdinalEncoder</label><div class=\"sk-toggleable__content\"><pre>OrdinalEncoder(handle_unknown=&#x27;use_encoded_value&#x27;, unknown_value=-1)</pre></div></div></div></div></div></div></div></div></div></div><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-30\" type=\"checkbox\" ><label for=\"sk-estimator-id-30\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KNeighborsClassifier</label><div class=\"sk-toggleable__content\"><pre>KNeighborsClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>"},"metadata":{}}],"execution_count":79},{"cell_type":"code","source":"pd.DataFrame(model.cv_results_).sort_values(\"rank_test_score\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T04:52:41.212425Z","iopub.execute_input":"2024-11-19T04:52:41.212866Z","iopub.status.idle":"2024-11-19T04:52:41.248967Z","shell.execute_reply.started":"2024-11-19T04:52:41.212817Z","shell.execute_reply":"2024-11-19T04:52:41.247739Z"}},"outputs":[{"execution_count":80,"output_type":"execute_result","data":{"text/plain":"    mean_fit_time  std_fit_time  mean_score_time  std_score_time  \\\n9        0.401835      0.003941         0.780740        0.028366   \n11       0.407625      0.018287         0.144038        0.002684   \n2        0.415411      0.003086         0.204118        0.000310   \n3        0.476961      0.046426         0.159235        0.012304   \n0        0.444151      0.006945         0.981485        0.007248   \n..            ...           ...              ...             ...   \n88       0.436642      0.031958         0.940812        0.006711   \n98       0.434370      0.076361         0.257403        0.069422   \n94       0.407601      0.003440         0.217411        0.001920   \n92       0.408660      0.008401         0.948891        0.008281   \n96       0.433703      0.035268         1.105731        0.109580   \n\n   param_algo__n_neighbors param_algo__p param_algo__weights  \\\n9                        5             1            distance   \n11                       5             2            distance   \n2                        1             2             uniform   \n3                        1             2            distance   \n0                        1             1             uniform   \n..                     ...           ...                 ...   \n88                      45             1             uniform   \n98                      49             2             uniform   \n94                      47             2             uniform   \n92                      47             1             uniform   \n96                      49             1             uniform   \n\n                                               params  split0_test_score  \\\n9   {'algo__n_neighbors': 5, 'algo__p': 1, 'algo__...           0.743902   \n11  {'algo__n_neighbors': 5, 'algo__p': 2, 'algo__...           0.746612   \n2   {'algo__n_neighbors': 1, 'algo__p': 2, 'algo__...           0.733062   \n3   {'algo__n_neighbors': 1, 'algo__p': 2, 'algo__...           0.733062   \n0   {'algo__n_neighbors': 1, 'algo__p': 1, 'algo__...           0.730352   \n..                                                ...                ...   \n88  {'algo__n_neighbors': 45, 'algo__p': 1, 'algo_...           0.653117   \n98  {'algo__n_neighbors': 49, 'algo__p': 2, 'algo_...           0.635501   \n94  {'algo__n_neighbors': 47, 'algo__p': 2, 'algo_...           0.646341   \n92  {'algo__n_neighbors': 47, 'algo__p': 1, 'algo_...           0.649051   \n96  {'algo__n_neighbors': 49, 'algo__p': 1, 'algo_...           0.634146   \n\n    split1_test_score  split2_test_score  mean_test_score  std_test_score  \\\n9            0.750339           0.751696         0.748646        0.003400   \n11           0.747626           0.743555         0.745931        0.001730   \n2            0.750339           0.744912         0.742771        0.007214   \n3            0.750339           0.744912         0.742771        0.007214   \n0            0.748982           0.747626         0.742320        0.008481   \n..                ...                ...              ...             ...   \n88           0.621438           0.625509         0.633355        0.014072   \n98           0.635007           0.626866         0.632458        0.003959   \n94           0.625509           0.622795         0.631548        0.010519   \n92           0.618725           0.617368         0.628381        0.014627   \n96           0.630936           0.614654         0.626579        0.008533   \n\n    rank_test_score  \n9                 1  \n11                2  \n2                 3  \n3                 3  \n0                 5  \n..              ...  \n88               96  \n98               97  \n94               98  \n92               99  \n96              100  \n\n[100 rows x 14 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>mean_fit_time</th>\n      <th>std_fit_time</th>\n      <th>mean_score_time</th>\n      <th>std_score_time</th>\n      <th>param_algo__n_neighbors</th>\n      <th>param_algo__p</th>\n      <th>param_algo__weights</th>\n      <th>params</th>\n      <th>split0_test_score</th>\n      <th>split1_test_score</th>\n      <th>split2_test_score</th>\n      <th>mean_test_score</th>\n      <th>std_test_score</th>\n      <th>rank_test_score</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>9</th>\n      <td>0.401835</td>\n      <td>0.003941</td>\n      <td>0.780740</td>\n      <td>0.028366</td>\n      <td>5</td>\n      <td>1</td>\n      <td>distance</td>\n      <td>{'algo__n_neighbors': 5, 'algo__p': 1, 'algo__...</td>\n      <td>0.743902</td>\n      <td>0.750339</td>\n      <td>0.751696</td>\n      <td>0.748646</td>\n      <td>0.003400</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>0.407625</td>\n      <td>0.018287</td>\n      <td>0.144038</td>\n      <td>0.002684</td>\n      <td>5</td>\n      <td>2</td>\n      <td>distance</td>\n      <td>{'algo__n_neighbors': 5, 'algo__p': 2, 'algo__...</td>\n      <td>0.746612</td>\n      <td>0.747626</td>\n      <td>0.743555</td>\n      <td>0.745931</td>\n      <td>0.001730</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.415411</td>\n      <td>0.003086</td>\n      <td>0.204118</td>\n      <td>0.000310</td>\n      <td>1</td>\n      <td>2</td>\n      <td>uniform</td>\n      <td>{'algo__n_neighbors': 1, 'algo__p': 2, 'algo__...</td>\n      <td>0.733062</td>\n      <td>0.750339</td>\n      <td>0.744912</td>\n      <td>0.742771</td>\n      <td>0.007214</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.476961</td>\n      <td>0.046426</td>\n      <td>0.159235</td>\n      <td>0.012304</td>\n      <td>1</td>\n      <td>2</td>\n      <td>distance</td>\n      <td>{'algo__n_neighbors': 1, 'algo__p': 2, 'algo__...</td>\n      <td>0.733062</td>\n      <td>0.750339</td>\n      <td>0.744912</td>\n      <td>0.742771</td>\n      <td>0.007214</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>0</th>\n      <td>0.444151</td>\n      <td>0.006945</td>\n      <td>0.981485</td>\n      <td>0.007248</td>\n      <td>1</td>\n      <td>1</td>\n      <td>uniform</td>\n      <td>{'algo__n_neighbors': 1, 'algo__p': 1, 'algo__...</td>\n      <td>0.730352</td>\n      <td>0.748982</td>\n      <td>0.747626</td>\n      <td>0.742320</td>\n      <td>0.008481</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>88</th>\n      <td>0.436642</td>\n      <td>0.031958</td>\n      <td>0.940812</td>\n      <td>0.006711</td>\n      <td>45</td>\n      <td>1</td>\n      <td>uniform</td>\n      <td>{'algo__n_neighbors': 45, 'algo__p': 1, 'algo_...</td>\n      <td>0.653117</td>\n      <td>0.621438</td>\n      <td>0.625509</td>\n      <td>0.633355</td>\n      <td>0.014072</td>\n      <td>96</td>\n    </tr>\n    <tr>\n      <th>98</th>\n      <td>0.434370</td>\n      <td>0.076361</td>\n      <td>0.257403</td>\n      <td>0.069422</td>\n      <td>49</td>\n      <td>2</td>\n      <td>uniform</td>\n      <td>{'algo__n_neighbors': 49, 'algo__p': 2, 'algo_...</td>\n      <td>0.635501</td>\n      <td>0.635007</td>\n      <td>0.626866</td>\n      <td>0.632458</td>\n      <td>0.003959</td>\n      <td>97</td>\n    </tr>\n    <tr>\n      <th>94</th>\n      <td>0.407601</td>\n      <td>0.003440</td>\n      <td>0.217411</td>\n      <td>0.001920</td>\n      <td>47</td>\n      <td>2</td>\n      <td>uniform</td>\n      <td>{'algo__n_neighbors': 47, 'algo__p': 2, 'algo_...</td>\n      <td>0.646341</td>\n      <td>0.625509</td>\n      <td>0.622795</td>\n      <td>0.631548</td>\n      <td>0.010519</td>\n      <td>98</td>\n    </tr>\n    <tr>\n      <th>92</th>\n      <td>0.408660</td>\n      <td>0.008401</td>\n      <td>0.948891</td>\n      <td>0.008281</td>\n      <td>47</td>\n      <td>1</td>\n      <td>uniform</td>\n      <td>{'algo__n_neighbors': 47, 'algo__p': 1, 'algo_...</td>\n      <td>0.649051</td>\n      <td>0.618725</td>\n      <td>0.617368</td>\n      <td>0.628381</td>\n      <td>0.014627</td>\n      <td>99</td>\n    </tr>\n    <tr>\n      <th>96</th>\n      <td>0.433703</td>\n      <td>0.035268</td>\n      <td>1.105731</td>\n      <td>0.109580</td>\n      <td>49</td>\n      <td>1</td>\n      <td>uniform</td>\n      <td>{'algo__n_neighbors': 49, 'algo__p': 1, 'algo_...</td>\n      <td>0.634146</td>\n      <td>0.630936</td>\n      <td>0.614654</td>\n      <td>0.626579</td>\n      <td>0.008533</td>\n      <td>100</td>\n    </tr>\n  </tbody>\n</table>\n<p>100 rows Ã— 14 columns</p>\n</div>"},"metadata":{}}],"execution_count":80},{"cell_type":"code","source":"model.best_params_","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T04:52:47.154720Z","iopub.execute_input":"2024-11-19T04:52:47.155123Z","iopub.status.idle":"2024-11-19T04:52:47.162355Z","shell.execute_reply.started":"2024-11-19T04:52:47.155088Z","shell.execute_reply":"2024-11-19T04:52:47.161102Z"}},"outputs":[{"execution_count":81,"output_type":"execute_result","data":{"text/plain":"{'algo__n_neighbors': 5, 'algo__p': 1, 'algo__weights': 'distance'}"},"metadata":{}}],"execution_count":81},{"cell_type":"code","source":"model.score(X_train, y_train), model.score(X_test, y_test)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T04:52:52.286743Z","iopub.execute_input":"2024-11-19T04:52:52.287188Z","iopub.status.idle":"2024-11-19T04:52:53.864943Z","shell.execute_reply.started":"2024-11-19T04:52:52.287153Z","shell.execute_reply":"2024-11-19T04:52:53.863979Z"}},"outputs":[{"execution_count":82,"output_type":"execute_result","data":{"text/plain":"(0.984629294755877, 0.7992766726943942)"},"metadata":{}}],"execution_count":82},{"cell_type":"markdown","source":"## **5 | SUMMARY**","metadata":{}},{"cell_type":"code","source":"import numpy as np\nimport pandas as pd\nfrom sklearn.model_selection import train_test_split, GridSearchCV\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import OneHotEncoder, MinMaxScaler, OrdinalEncoder\n\n# import data dan drop kolom\n#df = pd.read_csv(\"data/titanic.csv\", index_col =\"PassengerId\")\n#df.drop(columns=[\"Name\", \"Ticket\", \"Age\", \"Cabin\"], inplace=True)\n\n# dataset splitting\nX = df.drop(columns='class_numeric')\ny = df.class_numeric\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, stratify=y, random_state=42)\nX_train.shape, X_test.shape, y_train.shape, y_test.shape\n\n# preprocessor\nnumerical_pipeline = Pipeline([\n    (\"imputer\", SimpleImputer(strategy='mean')),\n    (\"scaler\", MinMaxScaler())\n])\ncategorical_pipeline = Pipeline([\n    (\"imputer\", SimpleImputer(strategy='most_frequent')),\n    (\"ordinal_encoder\", OrdinalEncoder(handle_unknown='use_encoded_value', unknown_value=-1))\n])\n\nnumeric = [\"MW\",\"LogP\",\"NumHDonors\",\"NumHAcceptors\"]\ncategoric = [col for col in X_train.columns if col not in numeric]\n\npreprocessor = ColumnTransformer([\n    (\"numeric\", numerical_pipeline, numeric),\n    (\"categoric\", categorical_pipeline,categoric)\n])\n\n# pipeline\npipeline = Pipeline([\n    (\"prep\", preprocessor),\n    (\"algo\", KNeighborsClassifier())\n])\n\n# parameter tuning\nparameter = {\n    \"algo__n_neighbors\": np.arange(1,51,2),\n    \"algo__weights\":['uniform', 'distance'],\n    \"algo__p\": [1, 2]\n}\n\nmodel = GridSearchCV(pipeline, param_grid=parameter, cv=3, n_jobs=-1, verbose=1)\nmodel.fit(X_train, y_train)\n\n# evaluation\nprint(model.best_params_)\nprint(model.score(X_train, y_train), model.best_score_, model.score(X_test, y_test))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T06:49:40.700231Z","iopub.execute_input":"2024-11-19T06:49:40.701412Z","iopub.status.idle":"2024-11-19T06:50:48.944626Z","shell.execute_reply.started":"2024-11-19T06:49:40.701323Z","shell.execute_reply":"2024-11-19T06:50:48.943540Z"}},"outputs":[{"name":"stdout","text":"Fitting 3 folds for each of 100 candidates, totalling 300 fits\n{'algo__n_neighbors': 5, 'algo__p': 1, 'algo__weights': 'distance'}\n0.984629294755877 0.7486459057263571 0.7992766726943942\n","output_type":"stream"}],"execution_count":10},{"cell_type":"markdown","source":"## 6 | Predict","metadata":{}},{"cell_type":"code","source":"X_pred = X.iloc[0:1]\nX_pred","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T07:08:11.903139Z","iopub.execute_input":"2024-11-19T07:08:11.903539Z","iopub.status.idle":"2024-11-19T07:08:11.919514Z","shell.execute_reply.started":"2024-11-19T07:08:11.903501Z","shell.execute_reply":"2024-11-19T07:08:11.918325Z"}},"outputs":[{"execution_count":19,"output_type":"execute_result","data":{"text/plain":"      MW    LogP  NumHDonors  NumHAcceptors  SubFP1  SubFP2  SubFP3  SubFP4  \\\n0  383.4  2.9943         0.0            6.0       1       1       0       0   \n\n   SubFP5  SubFP6  ...  SubFP298  SubFP299  SubFP300  SubFP301  SubFP302  \\\n0       0       0  ...         0         0         1         1         1   \n\n   SubFP303  SubFP304  SubFP305  SubFP306  SubFP307  \n0         0         0         0         0         1  \n\n[1 rows x 311 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>MW</th>\n      <th>LogP</th>\n      <th>NumHDonors</th>\n      <th>NumHAcceptors</th>\n      <th>SubFP1</th>\n      <th>SubFP2</th>\n      <th>SubFP3</th>\n      <th>SubFP4</th>\n      <th>SubFP5</th>\n      <th>SubFP6</th>\n      <th>...</th>\n      <th>SubFP298</th>\n      <th>SubFP299</th>\n      <th>SubFP300</th>\n      <th>SubFP301</th>\n      <th>SubFP302</th>\n      <th>SubFP303</th>\n      <th>SubFP304</th>\n      <th>SubFP305</th>\n      <th>SubFP306</th>\n      <th>SubFP307</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>383.4</td>\n      <td>2.9943</td>\n      <td>0.0</td>\n      <td>6.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n<p>1 rows Ã— 311 columns</p>\n</div>"},"metadata":{}}],"execution_count":19},{"cell_type":"code","source":"X_pred[\"class_numeric\"] = model.predict(X_pred)\nX_pred","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T07:08:15.056628Z","iopub.execute_input":"2024-11-19T07:08:15.057437Z","iopub.status.idle":"2024-11-19T07:08:15.115084Z","shell.execute_reply.started":"2024-11-19T07:08:15.057397Z","shell.execute_reply":"2024-11-19T07:08:15.114044Z"}},"outputs":[{"name":"stderr","text":"/tmp/ipykernel_30/3386018100.py:1: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  X_pred[\"class_numeric\"] = model.predict(X_pred)\n","output_type":"stream"},{"execution_count":20,"output_type":"execute_result","data":{"text/plain":"      MW    LogP  NumHDonors  NumHAcceptors  SubFP1  SubFP2  SubFP3  SubFP4  \\\n0  383.4  2.9943         0.0            6.0       1       1       0       0   \n\n   SubFP5  SubFP6  ...  SubFP299  SubFP300  SubFP301  SubFP302  SubFP303  \\\n0       0       0  ...         0         1         1         1         0   \n\n   SubFP304  SubFP305  SubFP306  SubFP307  class_numeric  \n0         0         0         0         1              0  \n\n[1 rows x 312 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>MW</th>\n      <th>LogP</th>\n      <th>NumHDonors</th>\n      <th>NumHAcceptors</th>\n      <th>SubFP1</th>\n      <th>SubFP2</th>\n      <th>SubFP3</th>\n      <th>SubFP4</th>\n      <th>SubFP5</th>\n      <th>SubFP6</th>\n      <th>...</th>\n      <th>SubFP299</th>\n      <th>SubFP300</th>\n      <th>SubFP301</th>\n      <th>SubFP302</th>\n      <th>SubFP303</th>\n      <th>SubFP304</th>\n      <th>SubFP305</th>\n      <th>SubFP306</th>\n      <th>SubFP307</th>\n      <th>class_numeric</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>383.4</td>\n      <td>2.9943</td>\n      <td>0.0</td>\n      <td>6.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>1 rows Ã— 312 columns</p>\n</div>"},"metadata":{}}],"execution_count":20},{"cell_type":"markdown","source":"## Save Model","metadata":{}},{"cell_type":"code","source":"import pickle, os\n\nos.makedirs(\"model_output\", exist_ok = True)\npickle.dump(model, open(\"model_output/knn.pkl\", \"wb\"))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-19T06:56:53.195075Z","iopub.execute_input":"2024-11-19T06:56:53.195491Z","iopub.status.idle":"2024-11-19T06:56:53.207748Z","shell.execute_reply.started":"2024-11-19T06:56:53.195451Z","shell.execute_reply":"2024-11-19T06:56:53.206788Z"}},"outputs":[],"execution_count":13}]}